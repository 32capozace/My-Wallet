function parsePrivateKeysFromText(c){var d=c.split(/\W+/g);try{var j=0;for(var b in d){var h=d[b];if(walletIsFull()){throw"Wallet Is Full"}try{var g=detectPrivateKeyFormat(h);var a=privateKeyStringToKey(h,g);console.log("Found PK "+h);if(g=="compsipa"){if(internalAddKey(a.getBitcoinAddressCompressed().toString(),encodePK(a.priv))){++j}}else{if(internalAddKey(a.getBitcoinAddress().toString(),encodePK(a.priv))){++j}}}catch(f){}}if(j>0){makeNotice("success","misc-success","Imported "+j+" private keys");backupWallet("update",function(){BlockchainAPI.get_history()});return true}}catch(f){makeNotice("error","misc-error",f)}return false}function importPyWalletJSONObject(d){var b=0;try{for(b=0;b<d.keys.length;++b){if(walletIsFull()){return}var a=privateKeyStringToKey(d.keys[b].sec,detectPrivateKeyFormat(d.keys[b].sec));if(d.keys[b].addr==a.getBitcoinAddress().toString()||d.keys[b].addr==a.getBitcoinAddressCompressed().toString()){internalAddKey(d.keys[b].addr,encodePK(a.priv))}else{makeNotice("error","misc-error","Private key doesn't seem to match the address. Possible corruption",1000);return false}}}catch(c){makeNotice("error","misc-error","Exception caught parsing importing JSON. Incorrect format?");return false}makeNotice("success","misc-success","Imported "+b+" private keys")}function importJSON(a){if(a==null||a.length==0){throw"No import data provided!"}var c=null;try{c=$.parseJSON(a);if(c==null){throw"null input_text"}}catch(b){decrypt(a,password,function(d){try{c=$.parseJSON(d);return(c!=null)}catch(f){return false}})}getSecondPassword(function(){try{if(c==null){console.log("Error Parsing JSON. Trying Plain Text import.");if(parsePrivateKeysFromText(a)){return true}else{throw"Could not decode import data"}}if(c==null||c.keys==null||c.keys.length==0){throw"No keys imported. Incorrect format?"}if(c.keys[0].hexsec!=null){importPyWalletJSONObject(c)}else{for(var h=0;h<c.keys.length;++h){var k=c.keys[h].addr;if(k==null||k.length==0||k=="undefined"){continue}try{if(c.keys[h].priv!=null){if(c.double_encryption){var d=decrypt(c.keys[h].priv,c.sharedKey+dpassword,isBase58);if(d==null){throw"Error decrypting private key for address "+k}c.keys[h].priv=d}var g=privateKeyStringToKey(c.keys[h].priv,detectPrivateKeyFormat(c.keys[h].priv));if(g.getBitcoinAddress().toString()==k||g.getBitcoinAddressCompressed().toString()==k){internalAddKey(k,encodePK(g.priv))}else{throw"Not importing "+k+" becuse it is inconsistent with the decoded address "}}else{internalAddKey(k)}var f=addresses[k];f.label=c.keys[h].label;if(c.keys[h].tag!=null){f.tag=c.keys[h].tag}else{f.tag=1}}catch(j){makeNotice("error","misc-error",j)}}if(c.address_book!=null){for(var h=0;h<c.address_book.length;++h){internalAddAddressBookEntry(c.address_book[h].addr,c.address_book[h].label)}}}checkAllKeys();$("#import-input_text").val("");backupWallet("update",function(){BlockchainAPI.get_history()})}catch(j){makeNotice("error","misc-error",j)}})}function importS3WalletBackup(a){setLoadingText("Importing Backup");$.get(root+"wallet/get-backup?guid="+guid+"&sharedKey="+sharedKey+"&id="+a).success(function(d){try{var c=d.payload;importJSON(c)}catch(b){makeNotice("error","misc-error",b)}}).error(function(b){makeNotice("error","misc-error",b.responseText)})}function loadBackupsList(a){setLoadingText("Loading Backup List");$.get(root+"wallet/list-backups?guid="+guid+"&sharedKey="+sharedKey).success(function(h){try{if(h==null){throw"Failed to get backups"}var c=a.find("table tbody").empty();var f=h.results;if(f.length==0){throw"No backups found"}for(var d in f){var b=f[d];c.append("<tr><td>"+b.name+"</td><td>"+dateToString(new Date(b.last_modified))+"</td><td>"+b.size+'</td><td><a href="#" onclick="importS3WalletBackup(\''+b.id+"')\">Import</a></td></tr>")}}catch(g){makeNotice("error","misc-error",g)}}).error(function(b){makeNotice("error","misc-error",b.responseText)})};