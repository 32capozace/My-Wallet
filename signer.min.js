function exceptionToString(b){var a="";for(var c in b){a+="property: "+c+" value: ["+b[c]+"]\n"}return"toString():  value: ["+b.toString()+"]"}try{if(typeof window=="undefined"||!window){var window={};importScripts("/Resources/wallet/bitcoinjs.min.js");self.addEventListener("message",function(d){var c=d.data;switch(c.cmd){case"sign_input":try{var a=new Bitcoin.Transaction(c.tx);var b=new Bitcoin.Script(c.connected_script);var f=signInput(a,c.outputN,c.priv_to_use,b);if(f){self.postMessage({cmd:"on_sign",script:f,outputN:c.outputN})}else{throw"Unknown Error Signing Script "+c.outputN}}catch(d){self.postMessage({cmd:"on_error",e:exceptionToString(d)})}break;default:self.postMessage({cmd:"on_error",e:"Unknown Command"})}},false)}}catch(e){}Bitcoin.Transaction.prototype.addOutputScript=function(a,b){if(arguments[0] instanceof Bitcoin.TransactionOut){this.outs.push(arguments[0])}else{if(b instanceof BigInteger){b=b.toByteArrayUnsigned().reverse();while(b.length<8){b.push(0)}}else{if(Bitcoin.Util.isArray(b)){}}this.outs.push(new Bitcoin.TransactionOut({value:b,script:a}))}};function startTxUI(b,a,g){try{var d=0;b.find('input[name="send-value"]').each(function(){d+=parseFloat($(this).val())});if(d>20){if(a=="email"||a=="facebook"){throw"Cannot Send More Than 20 BTC via email or facebook"}else{if(a=="quick"){a="custom"}}}var c={};if(a=="custom"){var c={on_error:function(h){if(this.modal){this.modal.modal("hide")}},on_start:function(){var h=this;this.modal=$("#new-transaction-modal");this.modal.modal({keyboard:false,backdrop:"static",show:true});this.modal.find("#offline-transaction").hide();this.modal.find("#missing-private-key").hide();this.modal.find("#review-tx").hide();this.modal.find(".modal-header h3").html("Creating transaction");this.modal.find("#tx-sign-progress").hide();this.modal.find(".btn.btn-primary").attr("disabled",true);this.modal.find(".btn.btn-primary").text("Send Transaction");this.modal.find(".btn.btn-secondary").unbind().click(function(){h.error("User Cancelled")})},on_begin_signing:function(){$("#tx-sign-progress").show(200).find(".t").text(this.tx.ins.length)},on_sign_progress:function(h){$("#tx-sign-progress").find(".n").text(h)},on_finish_signing:function(){$("#tx-sign-progress").hide()}};g.addListener(c);g.ask_for_fee=function(k,j){var h=this;h.modal.modal("hide");var i=$("#ask-for-fee");i.modal({keyboard:false,backdrop:"static",show:true});i.find(".btn.btn-primary").unbind().click(function(){k();i.modal("hide")});i.find(".btn.btn-secondary").unbind().click(function(){j();i.modal("hide")});i.on("hidden",function(){h.modal.modal("show")})};g.ask_to_send=function(){var h=this;try{if(privateKeyToSweep==null){h.modal.find(".modal-header h3").html("Transaction Ready to Send.")}else{h.modal.find(".modal-header h3").html("Bitcoins Ready to Claim.")}h.modal.find("#missing-private-key").hide();h.modal.find("#review-tx").show();setReviewTransactionContent(h.modal,h.tx);var i=h.modal.find(".btn.btn-primary");setLoadingText("Checking Connectivity");$.get(root+"ping?"+new Date().getTime()).success(function(k){i.attr("disabled",false);i.text("Send Transaction");i.unbind().click(function(){i.attr("disabled",true);h.modal.modal("hide");h.send()})}).error(function(k){h.modal.find(".modal-header h3").html("Created Offline Transaction.");i.attr("disabled",false);i.text("Show Offline Instructions");i.unbind().click(function(){i.attr("disabled",true);h.modal.find("#missing-private-key").hide();h.modal.find("#review-tx").hide();h.modal.find("#offline-transaction").show();var l=tx.serialize();var m=Crypto.util.bytesToHex(l);h.modal.find('#offline-transaction textarea[name="data"]').val(m)});h.modal.center();h.error("Cannot Push Transaction Offline")})}catch(j){h.error(j)}}}else{if(a=="quick"||a=="email"||a=="facebook"){var c={on_error:function(h){b.find(".send").show(200);if(this.p){this.p.hide()}},on_success:function(){try{b.find(".send").show(200);if(this.p){this.p.hide()}}catch(h){console.log(h)}},on_start:function(){this.p=b.find(".progress");b.find(".send").hide();this.p.show();this.p.children().css("width","10%")},on_begin_signing:function(){this.p.children().css("width","25%")},on_sign_progress:function(h){this.p.children().css("width",25+((100/this.tx.ins.length)*h)+"%")},on_finish_signing:function(){this.p.children().css("width","100%")}};g.addListener(c);if(a=="email"){g.ask_to_send=function(){var h=this;var i=$("#send-email-modal");try{$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"get-info"},function(k){try{i.modal({keyboard:true,backdrop:"static",show:true});var m=k.alias;if(m==null){m=k.email}if(m==null){m="Anonymous"}i.find(".amount").text(formatBTC(h.email_data.amount.toString()));i.find(".email").text(h.email_data.email);i.find(".frame").html('<iframe frameBorder="0" style="box-sizing:border-box;width:100%;height:100%" src="'+root+"email-template?from_name="+m+"&amount="+h.email_data.amount+'&priv=Preview&type=send-bitcoins-get"></iframe>');i.find(".btn.btn-secondary").unbind().click(function(){h.error("User Cancelled");i.modal("hide")});i.find(".btn.btn-primary").unbind().click(function(){h.send();i.modal("hide")})}catch(l){i.modal("hide");h.error(l)}}).error(function(k){i.modal("hide");h.error("Error Getting Account Data")})}catch(j){i.modal("hide");h.error(j)}}}}}g.ask_for_private_key=showPrivateKeyModal;getSecondPassword(function(){try{var o=false;var m=b.find('select[name="from"]').val();if(m==null||m=="any"){g.from_addresses=getActiveAddresses()}else{g.from_addresses=[m]}var k=b.find('select[name="change-addr"]').val();if(k!=null){if(k=="new"){var j=generateNewAddressAndKey();g.change_address=j;g.generated_addresses.push(change_address)}else{if(k!="any"){try{g.change_address=new Bitcoin.Address(k)}catch(n){throw"Invalid change address: "+n}}}}var l=b.find('input[name="fees"]').val();if(l!=null){g.fee=Bitcoin.Util.parseValue(l);if(g.fee.compareTo(BigInteger.ZERO)<0){throw"Fees cannot be negative"}}var i=b.find(".recipient");if(i.length==0){throw"A transaction must have at least one recipient"}var h=function(){if(g.to_addresses.length<i.length){return}if(g.to_addresses.length>i.length){g.error("We seem to have more recipients than required. Unknown error");return}g.start()};i.each(function(){try{var q=$(this);var r=q.find('input[name="send-value"]');var C=q.find('input[name="send-to-address"]');var v=q.find('input[name="send-to-email"]');var B=q.find('input[name="send-to-facebook"]');var y=0;try{y=Bitcoin.Util.parseValue(r.val());if(y==null||y.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(t){throw"Invalid send amount"}if(C.length>0){var s=$.trim(C.val());if(s==null||s.length==0){throw"You must enter a bitcoin address for each recipient"}else{try{g.to_addresses.push({address:new Bitcoin.Address(s),value:y})}catch(t){var A=resolveLabel(s);if(A!=null){g.to_addresses.push({address:new Bitcoin.Address(A),value:y})}else{apiResolveFirstbits(s,function(D){g.to_addresses.push({address:new Bitcoin.Address(D),value:y});h()},function(){g.error("Invalid to address: "+s)});return false}}}}else{if(v.length>0){var z=$.trim(v.val());if(validateEmail(z)){var w=generateNewAddressAndKey();var u=addresses[w.toString()];u.tag=2;u.label=z+" (Sent Via Email)";g.generated_addresses.push(u.addr);g.to_addresses.push({address:w,value:y});if(g.email){throw"Cannot send to more than one email recipient at a time"}g.email_data={email:z,addr:addresses[w],amount:y};g.addListener({on_success:function(){try{var D=this;$.get(root+"wallet/send-bitcoins-email?to="+D.email_data.email+"&guid="+guid+"&priv="+decryptPK(D.email_data.addr.priv)+"&sharedKey="+sharedKey).success(function(F){makeNotice("success",D.email_data.email,"Sent email confirmation")})}catch(E){console.log(E)}}})}else{throw"Invalid Email Address"}}else{if(B.length>0){var p=$.trim(B.val());var w=generateNewAddressAndKey();var u=addresses[w.toString()];u.tag=2;u.label=p+" (Sent Via Facebook)";g.generated_addresses.push(u.addr);g.to_addresses.push({address:w,value:y});if(g.facebook){throw"Cannot send to more than one facebook recipient at a time"}var x=B.data("fb-id");if(x==null){x=p}g.facebook={to:x,addr:addresses[w],amount:y}}}}}catch(t){g.error(t)}});h()}catch(n){g.error(n)}})}catch(f){g.error(f)}return g}function readVarInt(c){var a,b;a=c.splice(0,1)[0];if(a<253){b=[a]}else{if(a==253){b=c.splice(0,2)}else{if(a==254){b=c.splice(0,4)}else{b=c.splice(0,8)}}}return new BigInteger(b)}function readUInt32(a){return new BigInteger(a.splice(0,4).reverse()).intValue()}Bitcoin.Transaction.deserialize=function(k){var m=new Bitcoin.Transaction();m.version=readUInt32(k);var f=readVarInt(k).intValue();for(var l=0;l<f;l++){var g=k.splice(0,32);var c=Crypto.util.bytesToBase64(g);var a=readUInt32(k);var j=readVarInt(k).intValue();var n=new Bitcoin.Script(k.splice(0,j));var d=readUInt32(k);var o=new Bitcoin.TransactionIn({outpoint:{hash:c,index:a},script:n,sequence:d});m.ins.push(o)}var p=readVarInt(k).intValue();for(var l=0;l<p;l++){var b=k.splice(0,8);var j=readVarInt(k).intValue();var n=new Bitcoin.Script(k.splice(0,j));var h=new Bitcoin.TransactionOut({script:n,value:b});m.outs.push(h)}m.lock_time=readUInt32(k);return m};function getUnspentOutputs(b,c,a){setLoadingText("Getting Unspent Outputs");$.ajax({type:"POST",url:root+"unspent",data:{"addr[]":b,format:"json"},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":$.parseXML},success:function(d){try{var g=$.parseJSON(d);if(g==null){throw"Unspent returned null object"}if(g.error!=null){throw g.error}if(g.notice!=null){makeNotice("notice","misc-notice",g.notice)}try{localStorage.setItem("unspent",d)}catch(f){}c(g)}catch(f){a(f)}},error:function(f){try{try{var d=localStorage.getItem("unspent");if(d!=null){var h=$.parseJSON(d);c(h);return}}catch(g){console.log(g)}if(f.responseText){throw f.responseText}else{throw"Error Contacting Server. No unspent outputs available in cache."}}catch(g){a(g)}}})}function signInput(j,c,b,m){var a=m.simpleOutPubKeyHash();var d=new Bitcoin.Address(a).toString();var n=new Bitcoin.ECKey(b);var k;if(n.getBitcoinAddress().toString()==d.toString()){k=false}else{if(n.getBitcoinAddressCompressed().toString()==d.toString()){k=true}else{throw"Private key does not match bitcoin address "+d.toString()+" = "+n.getBitcoinAddress().toString()+" | "+n.getBitcoinAddressCompressed().toString()}}var h=parseInt(1);var i=j.hashTransactionForSignature(m,c,h);var g=n.sign(i);var f=Bitcoin.ECDSA.serializeSig(g.r,g.s);f.push(h);var l;if(k){l=Bitcoin.Script.createInputScript(f,n.getPubCompressed())}else{l=Bitcoin.Script.createInputScript(f,n.getPub())}if(l==null){throw"Error creating input script"}return l}function formatAddresses(b,f,a){var g="";if(f.length==1){var c=f[0].toString();if(a&&addresses[c]!=null&&addresses[c].label!=null){g=addresses[c].label}else{if(a&&address_book[c]!=null){g=address_book[c]}else{g=c}}}else{g="Escrow (<i>";for(var d=0;d<f.length;++d){g+=f[d].toString()+", "}g=g.substring(0,g.length-2);g+="</i> - "+b+" Required)"}return g}function setReviewTransactionContent(q,t){$("#rtc-hash").html(Crypto.util.bytesToHex(t.getHash()));$("#rtc-version").html(t.version);$("#rtc-from").html("");$("#rtc-to").html("");var u=BigInteger.ZERO;var s=BigInteger.ZERO;var l=BigInteger.ZERO;var f="send ";var p=true;var b=BigInteger.ZERO;for(var n=0;n<t.ins.length;++n){var j=t.ins[n];s=s.add(j.outpoint.value);l=l.add(j.outpoint.value);var d=null;try{d=new Bitcoin.Address(j.script.simpleInPubKeyHash())}catch(r){d="Unable To Decode Address"}$("#rtc-from").append(d+' <font color="green">'+formatBTC(j.outpoint.value.toString())+" BTC <br />")}var h=true;for(var n=0;n<t.outs.length;++n){var o=t.outs[n];var c=o.value.slice();c.reverse();var v=new BigInteger(c);var g=[];var k=o.script.extractAddresses(g);$("#rtc-to").append(formatAddresses(k,g)+' <font color="green">'+formatBTC(v.toString())+" BTC </font><br />");u=u.add(v);s=s.subtract(v);if(g.length>1){if(!h){f+=" and "}f+="<b>"+formatBTC(v.toString())+" BTC</b> to "+formatAddresses(k,g,true);p=false;l=l.subtract(v)}else{if(g.length>0){var a=g[0].toString();if(addresses[a]==null||addresses[a].tag==2){if(a!=our_address){if(!h){f+=" and "}f+="<b>"+formatBTC(v.toString())+" BTC</b> to "+formatAddresses(1,[a],true);p=false}}else{l=l.subtract(v);if(a!=our_address){b=b.add(v)}}}}h=false}if(s.compareTo(BigInteger.valueOf(1).multiply(BigInteger.valueOf(satoshi)))>=0){alert("Warning fees are very high for this transaction. Please double check each output!")}if(p==true){if(privateKeyToSweep==null){f="move <b>"+formatBTC(u.toString())+" BTC</b> between your own bitcoin addresses"}else{f="claim <b>"+formatBTC(b.toString())+" BTC</b> into your bitcoin wallet"}}$("#rtc-basic-summary").html(f);$("#rtc-effect").html("-"+formatBTC(l.toString())+" BTC");$("#rtc-fees").html(formatBTC(s.toString())+" BTC");$("#rtc-value").html(formatBTC(u.toString())+" BTC")}function initNewTx(){var b={generated_addresses:[],to_addresses:[],fee:BigInteger.ZERO,extra_private_keys:[],listeners:[],is_cancelled:false,addListener:function(c){this.listeners.push(c)},invoke:function(c,f,g){for(var d in this.listeners){if(this.listeners[d][c]){this.listeners[d][c].call(this,f,g)}}},start:function(){var c=this;try{c.invoke("on_start");getUnspentOutputs(c.from_addresses,function(k){try{if(k.unspent_outputs==null||k.unspent_outputs.length==0){throw"No Free Outputs To Spend"}c.unspent=[];for(var h=0;h<k.unspent_outputs.length;++h){var f;try{f=new Bitcoin.Script(Crypto.util.hexToBytes(k.unspent_outputs[h].script))}catch(j){makeNotice("error","misc-error","Error decoding script: "+j);continue}var g={script:f,value:BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(k.unspent_outputs[h].value_hex)),tx_output_n:k.unspent_outputs[h].tx_output_n,tx_hash:k.unspent_outputs[h].tx_hash,confirmations:k.unspent_outputs[h].confirmations};c.unspent.push(g)}c.makeTransaction()}catch(j){c.error(j)}},function(f){c.error(f)})}catch(d){c.error(d)}},makeTransaction:function(){var q=this;try{this.selected_outputs=[];var j=BigInteger.ZERO;for(var t=0;t<this.to_addresses.length;++t){j=j.add(this.to_addresses[t].value)}var r=(this.to_addresses.length==0);var v=false;for(var t=0;t<this.to_addresses.length;++t){var o=this.to_addresses[t];if(o.m!=null){v=true;break}}var d=BigInteger.ZERO;if(this.fee!=null){j=j.add(this.fee)}var y=0;for(var t in this.unspent){var u=this.unspent[t];try{var n=new Bitcoin.Address(u.script.simpleOutPubKeyHash()).toString();if(n==null){throw"Unable to decode output address from transaction hash "+u.tx_hash}if(this.from_addresses!=null&&this.from_addresses.length>0&&$.inArray(n.toString(),this.from_addresses)==-1){continue}var k=Crypto.util.hexToBytes(u.tx_hash);var h=Crypto.util.bytesToBase64(Crypto.util.hexToBytes(u.tx_hash));var p=new Bitcoin.TransactionIn({outpoint:{hash:h,hexhash:k,index:u.tx_output_n,value:u.value},script:u.script,sequence:4294967295});if(u.value.compareTo(j)>=0){this.selected_outputs=[p];y=u.value*u.confirmations;d=u.value;break}else{this.selected_outputs.push(p);y+=u.value*u.confirmations;d=d.add(u.value);if(!r&&d.compareTo(j)>=0){break}}}catch(w){makeNotice("info","tx-error",w)}}if(d.compareTo(j)<0){this.error("Insufficient funds. Value Needed "+formatBTC(j.toString())+" BTC. Available amount "+formatBTC(d.toString())+" BTC");return}if(this.selected_outputs.length==0){this.error("No Available Outputs To Spend.");return}var g=new Bitcoin.Transaction();for(var t=0;t<this.selected_outputs.length;t++){g.addInput(this.selected_outputs[t])}var s=false;for(var t=0;t<this.to_addresses.length;++t){var o=this.to_addresses[t];if(o.m!=null){g.addOutputScript(Bitcoin.Script.createMultiSigOutputScript(o.m,o.pubkeys),o.value)}else{g.addOutput(o.address,o.value)}}var x=d.subtract(j);if(x.compareTo(BigInteger.ZERO)>0){if(this.change_address!=null){g.addOutput(this.change_address,x)}else{if(!r&&this.from_addresses!=null&&this.from_addresses.length>0){g.addOutput(new Bitcoin.Address(this.from_addresses[0]),x)}else{g.addOutput(new Bitcoin.Address(getPreferredAddress()),x)}}}var m=false;for(var t=0;t<g.outs.length;++t){var u=g.outs[t];var l=u.value.slice();l.reverse();var z=new BigInteger(l);if(z.compareTo(BigInteger.valueOf(50000))<0){m=true}else{if(z.compareTo(BigInteger.valueOf(1000000))<0){s=true}}}var c=g.serialize(g).length+(114*g.ins.length);y/=c;var f=c/1024;if(m&&(this.fee==null||this.fee.intValue()==0)){q.fee=BigInteger.valueOf(50000);q.makeTransaction()}else{if((y<57600000||f>1||v||s)&&q.fee.intValue()==0){q.ask_for_fee(function(){q.fee=BigInteger.valueOf(50000);q.makeTransaction()},function(){q.tx=g;q.determinePrivateKeys(function(){q.signInputs()})})}else{q.tx=g;q.determinePrivateKeys(function(){q.signInputs()})}}}catch(w){this.error(w)}},ask_for_fee:function(d,c){d()},determinePrivateKeys:function(l){var c=this;try{var j={};for(var f in c.selected_outputs){var d=c.selected_outputs[f].script;if(d.priv_to_use==null){var h=d.simpleOutPubKeyHash();var g=new Bitcoin.Address(h).toString();if(j[g]){d.priv_to_use=j[g]}else{if(c.extra_private_keys[g]){d.priv_to_use=Bitcoin.Base58.decode(c.extra_private_keys[g])}else{if(addresses[g]&&addresses[g].priv){d.priv_to_use=decodePK(addresses[g].priv)}}}if(d.priv_to_use==null){c.ask_for_private_key(function(i){try{if(g==i.getBitcoinAddress().toString()||g==i.getBitcoinAddressCompressed().toString()){c.extra_private_keys[g]=Bitcoin.Base58.encode(i.priv);c.determinePrivateKeys(l)}else{throw"The private key you entered does not match the bitcoin address"}}catch(m){c.error(m)}},function(i){c.error(i)},g);return false}else{j[g]=d.priv_to_use}}}l()}catch(k){c.error(k)}},signWebWorker:function(l,j){try{var n=this;var f=0;var m=Math.min(3,n.tx.ins.length);var c=[];for(var d=0;d<m;++d){c[d]=new Worker("/Resources/wallet/signer.min.js");c[d].addEventListener("message",function(p){var o=p.data;switch(o.cmd){case"on_sign":n.invoke("on_sign_progress",parseInt(o.outputN)+1);n.tx.ins[o.outputN].script=new Bitcoin.Script(o.script);++f;if(f==n.tx.ins.length){for(var i=0;i<m;++i){c[i].terminate()}l()}break;case"on_error":for(var i=0;i<m;++i){c[i].terminate()}j(o.e)}},false)}for(var g in n.selected_outputs){var k=n.selected_outputs[g].script;c[g%m].postMessage({cmd:"sign_input",tx:n.tx,outputN:g,priv_to_use:k.priv_to_use,connected_script:k})}}catch(h){j(h)}},signNormal:function(g,f){var d=this;var c=0;signOne=function(){setTimeout(function(){try{d.invoke("on_sign_progress",c+1);var h=d.selected_outputs[c].script;var j=signInput(d.tx,c,h.priv_to_use,h);if(j){d.tx.ins[c].script=j;++c;if(c==d.tx.ins.length){g()}else{signOne()}}else{throw"Unknown error signing transaction"}}catch(i){f(i)}},1)};signOne()},signInputs:function(){var c=this;try{c.invoke("on_begin_signing");var f=function(){c.invoke("on_finish_signing");c.is_ready=true;c.ask_to_send()};c.signWebWorker(f,function(g){console.log(g);c.signNormal(f,function(h){c.error(h)})})}catch(d){c.error(d)}},send:function(){var c=this;if(!c.is_cancelled&&c.is_ready){if(c.generated_addresses.length>0){c.has_saved_addresses=true;backupWallet("update",function(){c.pushTx()},function(){c.error("Error Backing Up Wallet. Cannot Save Newly Generated Keys.")})}else{c.pushTx()}}},pushTx:function(){var c=this;try{var f=this.tx.serialize();var g=Crypto.util.bytesToHex(f);if(g.length>=32768){this.error("My wallet cannot handle transactions over 32KB in size. Please try splitting your transaction,")}setLoadingText("Sending Transaction");var d=transactions.length;$.post("/pushtx",{format:"plain",tx:g},function(i){setTimeout(function(){if(transactions.length==d){queryAPIMultiAddress();apiGetRejectionReason(Crypto.util.bytesToHex(tx.getHash()),function(j){c.error(j)})}},2000);c.success()}).error(function(i){c.error(i.responseText)})}catch(h){c.error(h)}},ask_for_private_key:function(d,c){c("Cannot ask for private key without user interaction disabled")},ask_to_send:function(){var n=this;for(var h=0;h<n.tx.ins.length;++h){var l=n.tx.ins[h];console.log("From : "+new Bitcoin.Address(l.script.simpleInPubKeyHash())+" => "+l.outpoint.value.toString())}var g=true;for(var h=0;h<n.tx.outs.length;++h){var f=n.tx.outs[h];var k=[];var d=f.script.extractAddresses(k);var j=f.value.slice();j.reverse();var c=new BigInteger(j);console.log("To: "+formatAddresses(d,k)+" => "+c.toString())}n.send()},error:function(c){if(this.is_cancelled){return}this.is_cancelled=true;if(this.generated_addresses.length>0){for(var d in this.generated_addresses){internalDeleteAddress(this.generated_addresses[d])}if(this.has_saved_addresses){backupWallet()}}this.invoke("on_error",c)},success:function(){this.invoke("on_success")}};var a={on_error:function(c){if(c){makeNotice("error","tx-error",c)}$(".send").attr("disabled",false)},on_success:function(c){try{$(".send").attr("disabled",false)}catch(c){console.log(c)}},on_start:function(c){$(".send").attr("disabled",true)},on_begin_signing:function(){this.start=new Date().getTime()},on_finish_signing:function(){console.log("Took "+(new Date().getTime()-this.start)+"ms")}};b.addListener(a);return b}function signMessage(i,g){var c="Bitcoin Signed Message:\n";var h=addresses[i];if(h.priv==null){makeNotice("error","add-error","Cannot sign a message with a watch only address",0);return}var d=new Bitcoin.ECKey(decodePK(h.priv));var f=c+g;console.log(f);var b=d.sign(Crypto.SHA256(f,{asBytes:true}));console.log(b);var a=Bitcoin.ECDSA.serializeSig(b.r,b.s);return Crypto.util.bytesToBase64(a)};