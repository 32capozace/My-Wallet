Bitcoin.Transaction.prototype.addOutputScript=function(a,b){if(arguments[0] instanceof Bitcoin.TransactionOut){this.outs.push(arguments[0])}else{if(b instanceof BigInteger){b=b.toByteArrayUnsigned().reverse();while(b.length<8){b.push(0)}}else{if(Bitcoin.Util.isArray(b)){}}this.outs.push(new Bitcoin.TransactionOut({value:b,script:a}))}};Bitcoin.Script.prototype.getOutType=function(){if(this.chunks.length>3&&this.chunks[this.chunks.length-1]==Bitcoin.Opcode.map.OP_CHECKMULTISIG){return"Multisig"}else{if(this.chunks.length==5&&this.chunks[0]==Bitcoin.Opcode.map.OP_DUP&&this.chunks[1]==Bitcoin.Opcode.map.OP_HASH160&&this.chunks[3]==Bitcoin.Opcode.map.OP_EQUALVERIFY&&this.chunks[4]==Bitcoin.Opcode.map.OP_CHECKSIG){return"Address"}else{if(this.chunks.length==2&&this.chunks[1]==Bitcoin.Opcode.map.OP_CHECKSIG){return"Pubkey"}else{return"Strange"}}}};Bitcoin.Script.prototype.extractAddresses=function(b){switch(this.getOutType()){case"Address":b.push(new Bitcoin.Address(this.chunks[2]));return 1;case"Pubkey":b.push(new Bitcoin.Address(Bitcoin.Util.sha256ripe160(this.chunks[0])));return 1;case"Multisig":for(var a=1;a<this.chunks.length-2;++a){b.push(new Bitcoin.Address(Bitcoin.Util.sha256ripe160(this.chunks[a])))}return this.chunks[0]-Bitcoin.Opcode.map.OP_1+1;default:throw new Error("Encountered non-standard scriptPubKey")}};Bitcoin.Script.createMultiSigOutputScript=function(a,c){var b=new Bitcoin.Script();b.writeOp(Bitcoin.Opcode.map.OP_1+a-1);for(var d=0;d<c.length;++d){var e=c[d];b.writeBytes(e)}b.writeOp(Bitcoin.Opcode.map.OP_1+c.length-1);b.writeOp(Bitcoin.Opcode.map.OP_CHECKMULTISIG);return b};function startTxUI(b,a){var g=initNewTx();try{var d=0;b.find('input[name="send-value"]').each(function(){d+=parseFloat($(this).val())});if(d>20){if(a=="email"||a=="facebook"){throw"Cannot Send More Than 20 BTC via email or facebook"}else{if(a=="quick"){a="custom"}}}var c={};if(a=="custom"){var c={on_error:function(h){if(this.modal){this.modal.modal("hide")}},on_start:function(){var e=this;this.modal=$("#new-transaction-modal");this.modal.modal({keyboard:false,backdrop:"static",show:true});this.modal.find("#offline-transaction").hide();this.modal.find("#missing-private-key").hide();this.modal.find("#review-tx").hide();this.modal.find(".modal-header h3").html("Creating transaction");this.modal.find("#tx-sign-progress").hide();this.modal.find(".btn.btn-primary").attr("disabled",true);this.modal.find(".btn.btn-primary").text("Send Transaction");this.modal.find(".btn.btn-secondary").unbind().click(function(){e.error("User Cancelled")})},on_begin_signing:function(){$("#tx-sign-progress").show(200).find(".t").text(this.tx.ins.length)},on_sign_progress:function(e){$("#tx-sign-progress").find(".n").text(e)},on_finish_signing:function(){$("#tx-sign-progress").hide(200)}};g.addListener(c);g.ask_for_fee=function(j,i){var e=this;e.modal.hide();var h=$("#ask-for-fee");h.modal({keyboard:false,backdrop:"static",show:true});h.find(".btn.btn-primary").unbind().click(function(){j();h.modal("hide")});h.find(".btn.btn-secondary").unbind().click(function(){i();h.modal("hide")});h.on("hidden",function(){e.modal.show()})};g.ask_to_send=function(k){var h=this;try{if(privateKeyToSweep==null){h.modal.find(".modal-header h3").html("Transaction Ready to Send.")}else{h.modal.find(".modal-header h3").html("Bitcoins Ready to Claim.")}h.modal.find("#missing-private-key").hide();h.modal.find("#review-tx").show();setReviewTransactionContent(h.modal,h.tx);var i=h.modal.find(".btn.btn-primary");setLoadingText("Checking Connectivity");$.get(root+"ping?"+new Date().getTime()).success(function(e){i.attr("disabled",false);i.text("Send Transaction");i.unbind().click(function(){i.attr("disabled",true);h.modal.modal("hide");k()})}).error(function(e){h.modal.find(".modal-header h3").html("Created Offline Transaction.");i.attr("disabled",false);i.text("Show Offline Instructions");i.unbind().click(function(){i.attr("disabled",true);h.modal.find("#missing-private-key").hide();h.modal.find("#review-tx").hide();h.modal.find("#offline-transaction").show();var l=tx.serialize();var m=Crypto.util.bytesToHex(l);h.modal.find('#offline-transaction textarea[name="data"]').val(m)});h.modal.center();h.error("Cannot Push Transaction Offline")})}catch(j){h.error(j)}}}else{if(a=="quick"||a=="email"||a=="facebook"){var c={on_error:function(h){b.find(".send").show(200);if(this.p){this.p.hide()}},on_success:function(){try{b.find(".send").show(200);if(this.p){this.p.hide()}}catch(h){console.log(h)}},on_start:function(){this.p=b.find(".progress");b.find(".send").hide();this.p.show();this.p.children().css("width","10%")},on_begin_signing:function(){this.p.children().css("width","25%")},on_sign_progress:function(e){this.p.children().css("width",25+((100/this.tx.ins.length)*e)+"%")},on_finish_signing:function(){this.p.children().css("width","100%")}};g.addListener(c);if(a=="email"){g.ask_to_send=function(k){var h=this;var i=$("#send-email-modal");try{$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"get-info"},function(l){try{i.modal({keyboard:true,backdrop:"static",show:true});var n=l.alias;if(n==null){n=l.email}if(n==null){n="Anonymous"}i.find(".amount").text(formatBTC(h.email_data.amount.toString()));i.find(".email").text(h.email_data.email);i.find(".frame").html('<iframe frameBorder="0" style="box-sizing:border-box;width:100%;height:100%" src="'+root+"email-template?from_name="+n+"&amount="+h.email_data.amount+'&priv=Preview&type=send-bitcoins-get"></iframe>');i.find(".btn.btn-secondary").unbind().click(function(){h.error("User Cancelled");i.modal("hide")});i.find(".btn.btn-primary").unbind().click(function(){k();i.modal("hide")})}catch(m){i.modal("hide");h.error(m)}}).error(function(l){i.modal("hide");h.error("Error Getting Account Data")})}catch(j){i.modal("hide");h.error(j)}}}else{if(a=="facebook"){g.ask_to_send=function(j){var h=this;try{$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"get-info"},function(k){try{var m=k.alias;if(m==null){m=k.email}if(m==null){m="Anonymous"}FB.ui({display:"iframe",method:"send",to:h.facebook.to,link:"https://blockchain.info/email-template?from_name="+m+"&amount="+h.facebook.amount+"&priv=Preview&type=send-bitcoins-get&priv="+decryptPK(h.facebook.addr.priv)},function(e){console.log(e);if(e&&e.post_id){console.log("Send Pressed");j()}else{h.error("Facebook message was not sent.")}})}catch(l){h.error(l)}}).error(function(k){h.error("Error Getting Account Data")})}catch(i){h.error(i)}}}}}}g.ask_for_private_key=showPrivateKeyModal;getSecondPassword(function(){try{var o=false;var m=b.find('select[name="from"]').val();if(m==null||m=="any"){g.from_addresses=getActiveAddresses()}else{g.from_addresses=[m]}var k=b.find('select[name="change-addr"]').val();if(k!=null){if(k=="new"){var j=generateNewAddressAndKey();g.change_address=j;g.generated_addresses.push(change_address)}else{if(k!="any"){try{g.change_address=new Bitcoin.Address(k)}catch(n){throw"Invalid change address: "+n}}}}var l=b.find('input[name="fees"]').val();if(l!=null){g.fee=Bitcoin.Util.parseValue(l);if(g.fee.compareTo(BigInteger.ZERO)<0){throw"Fees cannot be negative"}}var i=b.find(".recipient");if(i.length==0){throw"A transaction must have at least one recipient"}var h=function(){if(g.to_addresses.length<i.length){return}g.start()};i.each(function(){try{var q=$(this);var r=q.find('input[name="send-value"]');var C=q.find('input[name="send-to-address"]');var v=q.find('input[name="send-to-email"]');var B=q.find('input[name="send-to-facebook"]');var y=0;try{y=Bitcoin.Util.parseValue(r.val());if(y==null||y.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(t){throw"Invalid send amount"}if(C.length>0){var s=$.trim(C.val());if(s==null||s.length==0){throw"You must enter a bitcoin address for each recipient"}else{try{g.to_addresses.push({address:new Bitcoin.Address(s),value:y})}catch(t){var A=resolveLabel(s);if(A!=null){g.to_addresses.push({address:new Bitcoin.Address(A),value:y})}else{apiResolveFirstbits(s,function(e){g.to_addresses.push({address:new Bitcoin.Address(e),value:y});h()},function(){g.error("Invalid to address: "+s)});return false}}}}else{if(v.length>0){var z=$.trim(v.val());if(validateEmail(z)){var w=generateNewAddressAndKey();var u=addresses[w.toString()];u.tag=2;u.label=z+" (Ready to send via email)";g.generated_addresses.push(u.addr);g.to_addresses.push({address:w,value:y});if(g.email){throw"Cannot send to more than one email recipient at a time"}g.email_data={email:z,addr:addresses[w],amount:y};g.addListener({on_success:function(){try{console.log("Send confirmation");var D=this;$.get(root+"wallet/send-bitcoins-email?to="+D.email_data.email+"&guid="+guid+"&priv="+decryptPK(D.email_data.addr.priv)+"&sharedKey="+sharedKey).success(function(e){D.email_data.addr.label=D.email_data.email+" (Sent via email)";backupWallet();makeNotice("success",D.email_data.email,"Sent email confirmation")})}catch(E){console.log(E)}}})}else{throw"Invalid Email Address"}}else{if(B.length>0){var p=$.trim(B.val());var w=generateNewAddressAndKey();var u=addresses[w.toString()];u.tag=2;u.label=p+" (Ready to send via facebook)";g.generated_addresses.push(u.addr);g.to_addresses.push({address:w,value:y});if(g.facebook){throw"Cannot send to more than one facebook recipient at a time"}var x=B.data("fb-id");if(x==null){x=p}g.facebook={to:x,addr:addresses[w],amount:y};g.addListener({on_success:function(){try{this.facebook.addr.label=email+" (Sent via facebook)";backupWallet()}catch(D){console.log(D)}}})}}}}catch(t){g.error(t)}});h()}catch(n){g.error(n)}})}catch(f){g.error(f)}return g}function readVarInt(c){var a,b;a=c.splice(0,1)[0];if(a<253){b=[a]}else{if(a==253){b=c.splice(0,2)}else{if(a==254){b=c.splice(0,4)}else{b=c.splice(0,8)}}}return new BigInteger(b)}function readUInt32(a){return new BigInteger(a.splice(0,4).reverse()).intValue()}Bitcoin.Transaction.deserialize=function(j){var l=new Bitcoin.Transaction();l.version=readUInt32(j);var e=readVarInt(j).intValue();for(var k=0;k<e;k++){var f=j.splice(0,32);var c=Crypto.util.bytesToBase64(f);var a=readUInt32(j);var h=readVarInt(j).intValue();var m=new Bitcoin.Script(j.splice(0,h));var d=readUInt32(j);var n=new Bitcoin.TransactionIn({outpoint:{hash:c,index:a},script:m,sequence:d});l.ins.push(n)}var o=readVarInt(j).intValue();for(var k=0;k<o;k++){var b=j.splice(0,8);var h=readVarInt(j).intValue();var m=new Bitcoin.Script(j.splice(0,h));var g=new Bitcoin.TransactionOut({script:m,value:b});l.outs.push(g)}l.lock_time=readUInt32(j);return l};function getUnspentOutputs(b,c,a){setLoadingText("Getting Unspent Outputs");$.ajax({type:"POST",url:root+"unspent",data:{"addr[]":b,format:"json"},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":$.parseXML},success:function(d){try{var g=$.parseJSON(d);if(g==null){throw"Unspent returned null object"}if(g.error!=null){throw g.error}if(g.notice!=null){makeNotice("notice","misc-notice",g.notice)}try{localStorage.setItem("unspent",d)}catch(f){}c(g)}catch(f){a(f)}},error:function(f){try{try{var d=localStorage.getItem("unspent");if(d!=null){var h=$.parseJSON(d);c(h);return}}catch(g){console.log(g)}if(f.responseText){throw f.responseText}else{throw"Error Contacting Server. No unspent outputs available in cache."}}catch(g){a(g)}}})}function signInput(h,b,c,a,l){var k=new Bitcoin.ECKey(a);var i;if(k.getBitcoinAddress().toString()==c.toString()){i=false}else{if(k.getBitcoinAddressCompressed().toString()==c.toString()){i=true}else{throw"Private key does not match bitcoin address"}}var f=parseInt(1);var g=sendTx.hashTransactionForSignature(l,b,f);var e=k.sign(g);var d=Bitcoin.ECDSA.serializeSig(e.r,e.s);d.push(f);var j;if(i){j=Bitcoin.Script.createInputScript(d,k.getPubCompressed())}else{j=Bitcoin.Script.createInputScript(d,k.getPub())}if(j==null){throw"Error creating input script"}h.ins[b].script=j}function setReviewTransactionContent(q,t){$("#rtc-hash").html(Crypto.util.bytesToHex(t.getHash()));$("#rtc-version").html(t.version);$("#rtc-from").html("");$("#rtc-to").html("");var u=BigInteger.ZERO;var s=BigInteger.ZERO;var l=BigInteger.ZERO;var f="send ";var p=true;var b=BigInteger.ZERO;for(var n=0;n<t.ins.length;++n){var j=t.ins[n];s=s.add(j.outpoint.value);l=l.add(j.outpoint.value);var d=null;try{d=new Bitcoin.Address(j.script.simpleInPubKeyHash())}catch(r){d="Unable To Decode Address"}$("#rtc-from").append(d+' <font color="green">'+formatBTC(j.outpoint.value.toString())+" BTC <br />")}var h=true;for(var n=0;n<t.outs.length;++n){var o=t.outs[n];var c=o.value.slice();c.reverse();var v=new BigInteger(c);var g=[];var k=o.script.extractAddresses(g);$("#rtc-to").append(formatAddresses(k,g)+' <font color="green">'+formatBTC(v.toString())+" BTC </font><br />");u=u.add(v);s=s.subtract(v);if(g.length>1){if(!h){f+=" and "}f+="<b>"+formatBTC(v.toString())+" BTC</b> to "+formatAddresses(k,g,true);p=false;l=l.subtract(v)}else{var a=g[0].toString();if(addresses[a]==null||addresses[a].tag==2){if(a!=our_address){if(!h){f+=" and "}f+="<b>"+formatBTC(v.toString())+" BTC</b> to "+formatAddresses(1,[a],true);p=false}}else{l=l.subtract(v);if(a!=our_address){b=b.add(v)}}}h=false}if(s.compareTo(BigInteger.valueOf(1).multiply(BigInteger.valueOf(satoshi)))>=0){alert("Warning fees are very high for this transaction. Please double check each output!")}if(p==true){if(privateKeyToSweep==null){f="move <b>"+formatBTC(u.toString())+" BTC</b> between your own bitcoin addresses"}else{f="claim <b>"+formatBTC(b.toString())+" BTC</b> into your bitcoin wallet"}}$("#rtc-basic-summary").html(f);$("#rtc-effect").html("-"+formatBTC(l.toString())+" BTC");$("#rtc-fees").html(formatBTC(s.toString())+" BTC");$("#rtc-value").html(formatBTC(u.toString())+" BTC")}function initNewTx(){var b={generated_addresses:[],to_addresses:[],fee:BigInteger.ZERO,extra_private_keys:[],listeners:[],addListener:function(c){this.listeners.push(c)},invoke:function(c,e,f){for(var d in this.listeners){if(this.listeners[d][c]){this.listeners[d][c].call(this,e,f)}}},start:function(){try{var c=this;c.invoke("on_start");getUnspentOutputs(this.from_addresses,function(k){try{if(k.unspent_outputs==null||k.unspent_outputs.length==0){throw"No Free Outputs To Spend"}c.unspent=[];for(var h=0;h<k.unspent_outputs.length;++h){var f;try{f=new Bitcoin.Script(Crypto.util.hexToBytes(k.unspent_outputs[h].script))}catch(j){makeNotice("error","misc-error","Error decoding script: "+j);continue}var g={script:f,value:BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(k.unspent_outputs[h].value_hex)),tx_output_n:k.unspent_outputs[h].tx_output_n,tx_hash:k.unspent_outputs[h].tx_hash,confirmations:k.unspent_outputs[h].confirmations};c.unspent.push(g)}c.makeTransaction()}catch(j){this.error(j)}},function(f){this.error(f)})}catch(d){this.error(d)}},makeTransaction:function(){var p=this;try{this.selected_outputs=[];var j=BigInteger.ZERO;for(var s=0;s<this.to_addresses.length;++s){j=j.add(this.to_addresses[s].value)}var q=(this.to_addresses.length==0);var u=false;for(var s=0;s<this.to_addresses.length;++s){var o=this.to_addresses[s];if(o.m!=null){u=true;break}}var d=BigInteger.ZERO;if(this.fee!=null){j=j.add(this.fee)}var x=0;for(var s in this.unspent){var t=this.unspent[s];try{var n=new Bitcoin.Address(t.script.simpleOutPubKeyHash()).toString();if(n==null){throw"Unable to decode output address from transaction hash "+t.tx_hash}if(this.from_addresses!=null&&this.from_addresses.length>0&&$.inArray(n.toString(),this.from_addresses)==-1){continue}else{d=d.add(t.value)}var k=Crypto.util.hexToBytes(t.tx_hash);var h=Crypto.util.bytesToBase64(Crypto.util.hexToBytes(t.tx_hash));if(t.value.compareTo(j)>=0){this.selected_outputs=[];x=t.value*t.confirmations;d=t.value;this.selected_outputs.push(new Bitcoin.TransactionIn({outpoint:{hash:h,hexhash:k,index:t.tx_output_n,value:t.value},script:t.script,sequence:4294967295}));break}else{this.selected_outputs.push(new Bitcoin.TransactionIn({outpoint:{hash:h,hexhash:k,index:t.tx_output_n,value:t.value},script:t.script,sequence:4294967295}));x+=t.value*t.confirmations;if(!q&&d.compareTo(j)>=0){break}}}catch(v){makeNotice("info","tx-error",v)}}if(d.compareTo(j)<0){this.error("Insufficient funds. Value Needed "+formatBTC(j.toString())+" BTC. Available amount "+formatBTC(d.toString())+" BTC");return}if(this.selected_outputs.length==0){this.error("No Available Outputs To Spend.");return}var g=new Bitcoin.Transaction();for(var s=0;s<this.selected_outputs.length;s++){g.addInput(this.selected_outputs[s])}var r=false;for(var s=0;s<this.to_addresses.length;++s){var o=this.to_addresses[s];if(o.m!=null){g.addOutputScript(Bitcoin.Script.createMultiSigOutputScript(o.m,o.pubkeys),o.value)}else{g.addOutput(o.address,o.value)}}var w=d.subtract(j);if(w.compareTo(BigInteger.ZERO)>0){if(this.change_address!=null){g.addOutput(this.change_address,w)}else{if(!q&&this.from_addresses!=null&&this.from_addresses.length>0){g.addOutput(new Bitcoin.Address(this.from_addresses[0]),w)}else{g.addOutput(new Bitcoin.Address(getPreferredAddress()),w)}}}var m=false;for(var s=0;s<g.outs.length;++s){var t=g.outs[s];var l=t.value.slice();l.reverse();var y=new BigInteger(l);if(y.compareTo(BigInteger.valueOf(50000))<0){m=true}else{if(y.compareTo(BigInteger.valueOf(1000000))<0){r=true}}}var c=g.serialize(g).length+(114*g.ins.length);x/=c;var f=c/1024;if(m&&(this.fee==null||this.fee.intValue()==0)){p.fee=BigInteger.valueOf(50000);p.makeTransaction()}else{if((x<57600000||f>1||u||r)&&p.fee.intValue()==0){p.ask_for_fee(function(){p.fee=BigInteger.valueOf(50000);p.makeTransaction()},function(){p.tx=g;p.signInputs()})}else{p.tx=g;p.signInputs()}}}catch(v){this.error(v)}},ask_for_fee:function(d,c){d()},signInputs:function(){var d=this;try{d.invoke("on_begin_signing");var c=0;var f=[];signOne=function(){setTimeout(function(){try{d.invoke("on_sign_progress",c+1);var i=d.selected_outputs[c].script;var k=i.simpleOutPubKeyHash();var h=new Bitcoin.Address(k).toString();var j=null;var n=addresses[h];if(n!=null){try{if(n.priv!=null){j=decodePK(n.priv)}}catch(l){console.log(l)}}if(j==null){var m=d.extra_private_keys[h];if(m){j=Base58.decode(m)}}if(j==null){d.ask_for_private_key(function(e){if(h==e.getBitcoinAddress().toString()||h==e.getBitcoinAddressCompressed().toString()){d.extra_private_keys[h]=Bitcoin.Base58.encode(e.priv);signOne()}else{d.error("The private key you entered does not match the bitcoin address")}},function(o){d.error(o)},h)}else{if(signInput(d.tx,c,h,j,i)){signOne()}else{throw"Unknown error signing transaction"}}}catch(l){d.error(l)}},1)};signOne()}catch(g){d.error(g)}},pushTx:function(){var c=this;try{var f=this.tx.serialize();var g=Crypto.util.bytesToHex(f);if(g.length>=32768){this.error("My wallet cannot handle transactions over 32KB in size. Please try splitting your transaction,")}setLoadingText("Sending Transaction");var d=transactions.length;console.log("Push TX");$.post("/pushtx",{format:"plain",tx:g},function(e){setTimeout(function(){if(transactions.length==d){queryAPIMultiAddress();apiGetRejectionReason(Crypto.util.bytesToHex(tx.getHash()),function(i){c.error(i)})}},2000);c.success()}).error(function(e){c.error(e.responseText)})}catch(h){c.error(h)}},ask_for_private_key:function(d,c){c("Cannot ask for private key without user interaction disabled")},ask_to_send:function(c){var n=this;for(var h=0;h<n.tx.ins.length;++h){var l=n.tx.ins[h];console.log("From : "+new Bitcoin.Address(l.script.simpleInPubKeyHash())+" => "+l.outpoint.value.toString())}var g=true;for(var h=0;h<n.tx.outs.length;++h){var f=n.tx.outs[h];var k=[];var e=f.script.extractAddresses(k);var j=f.value.slice();j.reverse();var d=new BigInteger(j);console.log("To: "+formatAddresses(e,k)+" => "+d.toString())}c()},error:function(c){this.is_cancelled=true;if(this.generated_addresses.length>0){for(var d in this.generated_addresses){internalDeleteAddress(this.generated_addresses[d])}backupWallet()}this.invoke("on_error",c)},success:function(){this.invoke("on_success")}};var a={on_error:function(c){if(c){makeNotice("error","tx-error",c)}$(".send").attr("disabled",false)},on_success:function(c){try{$(".send").attr("disabled",false)}catch(c){console.log(c)}},on_start:function(c){$(".send").attr("disabled",true)}};b.addListener(a);return b}function signMessage(h,f){var c="Bitcoin Signed Message:\n";var g=addresses[h];if(g.priv==null){makeNotice("error","add-error","Cannot sign a message with a watch only address",0);return}var d=new Bitcoin.ECKey(decodePK(g.priv));var e=c+f;console.log(e);var b=d.sign(Crypto.SHA256(e,{asBytes:true}));console.log(b);var a=Bitcoin.ECDSA.serializeSig(b.r,b.s);return Crypto.util.bytesToBase64(a)};