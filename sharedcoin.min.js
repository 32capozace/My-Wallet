var SharedCoin=new function(){var d=this;var c={};var b=1;var a=MyWallet.getSharedcoinEndpoint();this.newOffer=function(){return{offered_outpoints:[],request_outputs:[],offer_id:0,submit:function(g,f){var e=this;MyWallet.setLoadingText("Submitting Offer");$.ajax({dataType:"json",type:"POST",url:a,data:{method:"submit_offer",format:"json",offer:JSON.stringify(e)},success:function(h){if(!h.offer_id){f("Null offer_id returned")}else{e.offer_id=h.offer_id;g()}},error:function(h){f(h.responseText)}})},_pollForProposalID:function(g,f){var e=this;console.log("Offer._pollForProposalID()");MyWallet.setLoadingText("Waiting For Other Participants");$.ajax({dataType:"json",type:"POST",url:a,data:{method:"get_offer_id",format:"json",offer_id:e.offer_id},success:function(h){g(h)},error:function(h){f(h.responseText)}})},pollForProposalID:function(h,f){var e=this;var g=function(i){if(i.status=="waiting"){e._pollForProposalID(g,f)}else{if(i.status=="not_found"){f("Offer ID Not Found")}else{if(i.status=="active_proposal"){h(i.proposal_id)}}}};e._pollForProposalID(g,f)},getProposal:function(g,h,f){var e=this;console.log("SharedCoin.getProposal()");MyWallet.setLoadingText("Fetching Proposal");$.ajax({dataType:"json",type:"POST",url:a,data:{method:"get_proposal_id",format:"json",offer_id:e.offer_id,proposal_id:g},success:function(i){if(i.status=="not_found"){f("Proposal or Offer ID Not Found")}else{h(i)}},error:function(i){f(i.responseText)}})},isOutpointOneWeOffered:function(f){var e=this;var h=f.outpoint.hash;var k=Crypto.util.bytesToHex(Crypto.util.base64ToBytes(h).reverse());var g=f.outpoint.index;for(var i in e.offered_outpoints){var j=e.offered_outpoints[i];if(j.hash.toString()==k.toString()&&j.index.toString()==g.toString()){return true}}return false},isOutputOneWeRequested:function(g){var f=this;var k=g.value.slice(0);k.reverse();var e=Crypto.util.bytesToHex(g.script.buffer);var j=new BigInteger(k);for(var h in f.request_outputs){var i=f.request_outputs[h];if(i.script.toString()==e.toString()&&j.toString()==i.value.toString()){return true}}return false},checkProposal:function(m,o,n){console.log("Offer.checkProposal()");var q=this;try{if(m.tx==null){throw"Proposal Transaction Is Null"}var h=Crypto.util.hexToBytes(m.tx);Bitcoin.Transaction.deserialize=function(y){var A=new Bitcoin.Transaction();A.version=readUInt32(y);var u=readVarInt(y).intValue();for(var z=0;z<u;z++){var v=y.splice(0,32);var s=Crypto.util.bytesToBase64(v);var e=readUInt32(y);var x=readVarInt(y).intValue();var B=new Bitcoin.Script(y.splice(0,x));var t=readUInt32(y);var C=new Bitcoin.TransactionIn({outpoint:{hash:s,index:e},script:B,sequence:t});A.ins.push(C)}var D=readVarInt(y).intValue();for(var z=0;z<D;z++){var r=y.splice(0,8);var x=readVarInt(y).intValue();var B=new Bitcoin.Script(y.splice(0,x));var w=new Bitcoin.TransactionOut({script:B,value:r});A.outs.push(w)}A.lock_time=readUInt32(y);return A};var k=Bitcoin.Transaction.deserialize(h);if(k==null){throw"Error deserializing transaction"}var p=0;for(var j=0;j<k.outs.length;++j){if(q.isOutputOneWeRequested(k.outs[j])){++p}}if(p<q.request_outputs.length){throw"Could not find all our requested outputs ("+p+" < "+q.request_outputs.length+")"}var g=0;for(var j=0;j<m.signature_requests.length;++j){var f=m.signature_requests[j].tx_input_index;if(q.isOutpointOneWeOffered(k.ins[f])){++g}}if(q.offered_outpoints.length!=g){throw"Could not find all our offered outpoints ("+q.offered_outpoints.length+" != "+g+")"}o(k)}catch(l){n(l)}},signNormal:function(e,i,k,h){console.log("Offer.signNormal()");var g=0;var j=[];var f=function(){setTimeout(function(){try{var l=i[g];var n=signInput(e,l.tx_input_index,l.priv_to_use,l,SIGHASH_ALL);if(n){g++;j.push({tx_input_index:l.tx_input_index,input_script:Crypto.util.bytesToHex(n.buffer),offer_outpoint_index:l.offer_outpoint_index});if(g==i.length){k(j)}else{f()}}else{throw"Unknown error signing transaction"}}catch(m){h(m)}},1)};f()},submitInputScripts:function(g,h,i,f){console.log("Offer.submitInputScripts()");var e=this;MyWallet.setLoadingText("Submitting Signatures");$.ajax({dataType:"json",type:"POST",url:a,data:{method:"submit_signatures",format:"json",input_scripts:JSON.stringify(h),offer_id:e.offer_id,proposal_id:g.proposal_id},success:function(j){if(j.status=="not_found"){f("Proposal Expired or Not Found")}else{if(j.status=="verification_failed"){f("Signature Verification Failed")}else{if(j.status=="signatures_accepted"){i("Signatures Accepted")}else{f("Unknown status "+j.status)}}}},error:function(j){f(j.responseText)}})},signInputs:function(o,l,r,p){console.log("Offer.signInputs()");var s=this;try{var m={};var g=[];for(var k=0;k<o.signature_requests.length;++k){var j=o.signature_requests[k];var q=new Bitcoin.Script(Crypto.util.hexToBytes(j.connected_script));q.tx_input_index=j.tx_input_index;q.offer_outpoint_index=j.offer_outpoint_index;var f=q.simpleOutPubKeyHash();var h=new Bitcoin.Address(f).toString();if(m[h]){q.priv_to_use=m[h]}else{if(MyWallet.addressExists(h)&&!MyWallet.isWatchOnly(h)){q.priv_to_use=MyWallet.decodePK(MyWallet.getPrivateKey(h))}}if(q.priv_to_use==null){throw"Private key not found"}else{m[h]=q.priv_to_use}g.push(q)}s.signNormal(l,g,function(e){r(e)},function(i){p(i)})}catch(n){p(n)}}}};this.newPlan=function(){return{offers:[],n_stages:0,c_stage:0,executeOffer:function(f,g,e){f.submit(function(){console.log("Successfully Submitted Offer");f.pollForProposalID(function(h){console.log("Proposal ID "+h);MyWallet.backupWallet("update",function(){console.log("Saved Wallet");f.getProposal(h,function(i){console.log("Got Proposal");f.checkProposal(i,function(j){console.log("Proposal Looks Good");f.signInputs(i,j,function(k){console.log("Inputs Signed");f.submitInputScripts(i,k,function(l){console.log("Submitted Input Scripts")},function(l){e(l)})},function(k){e(k)})},function(j){e(j)})},function(i){e(i)})},function(i){e(i)})},function(h){e(h)})},function(h){e(h)})},execute:function(h,f){var e=this;var g=e.offers[e.c_stage];if(g.offer_id==0){e.executeOffer(g,function(){h()},function(i){f(i)})}}}};this.generateAndSaveNewAddress=function(j,f){try{var g=MyWallet.generateNewKey();var i=g.getBitcoinAddress();MyWallet.setAddressLabel(i.toString(),"SharedCoin Change");j(i)}catch(h){f(h)}};this.getMinimumOutputValue=function(){return c.minimum_output_value};this.getMinimumSupportedVersion=function(){return c.min_supported_version};this.getIsEnabled=function(){return c.enabled};this.getMaximumOutputValue=function(){return c.maximum_output_value};this.getFee=function(){return c.fee_percent};this.constructPlan=function(l,u,s){try{var j=l.find('select[name="repetitions"]');var p=parseInt(j.val());if(p<=0){throw"invalid number of repetitions"}var q=initNewTx();var g=l.find('select[name="from"]');var m=g.val();if(m==null||m=="any"){q.from_addresses=MyWallet.getActiveAddresses()}else{if(g.attr("multiple")=="multiple"){q.from_addresses=m}else{q.from_addresses=[m]}}var h=l.find(".recipient");h.each(function(){try{var A=$(this);var z=A.find('input[name="send-value"]');var w=A.find('input[name="send-to-address"]');var x=0;try{x=precisionToSatoshiBN(z.val());if(x==null||x.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(y){console.log(y);throw"Invalid send amount"}var i=$.trim(w.val()).replace(/[\u200B-\u200D\uFEFF]/g,"");if(i==null||i.length==0){throw"You must enter a bitcoin address for each recipient"}var v=resolveAddress(i);if(v==null||v.length==0){throw"You must enter a bitcoin address for each recipient"}q.to_addresses.push({address:new Bitcoin.Address(v),value:x})}catch(y){s(y)}});if(q.to_addresses.length==0||q.to_addresses.length<h.length){return}var k=[];for(var o in q.to_addresses){var n=q.to_addresses[o];k.push(n.value);for(var t=0;t<p;++t){var f=d.calculateFeeForValue(n.value);n.value=n.value.add(f)}}d.generateAndSaveNewAddress(function(e){q.min_input_confirmations=1;q.allow_adjust=false;q.change_address=e;q.base_fee=BigInteger.ZERO;q.min_free_output_size=BigInteger.ZERO;q.fee=BigInteger.ZERO;var i=d.newOffer();q.signInputs=function(){try{var G=this;for(var y=0;y<G.tx.ins.length;++y){var E=G.tx.ins[y];var w=E.outpoint.hash;var D=Crypto.util.bytesToHex(Crypto.util.base64ToBytes(w).reverse());i.offered_outpoints.push({hash:D,index:E.outpoint.index})}for(var y=0;y<G.tx.outs.length;++y){var x=G.tx.outs[y];var B=x.value.slice(0);B.reverse();var v=new Bitcoin.Script(x.script).simpleOutPubKeyHash();var A=new Bitcoin.Address(v).toString();var F=new BigInteger(B);if(A.toString()==e.toString()){i.request_outputs.push({value:F.toString(),script:Crypto.util.bytesToHex(x.script.buffer),exclude_from_fee:true})}else{i.request_outputs.push({value:k[y].toString(),script:Crypto.util.bytesToHex(x.script.buffer)})}}var C=d.newPlan();C.offers.push(i);C.n_stages=p;C.c_stage=0;u(C)}catch(z){s(z)}q.cancel()};q.addListener({on_error:function(v){s(v)}});q.start()},function(i){s(i)})}catch(r){MyWallet.makeNotice("error","misc-error",r)}};this.calculateFeeForValue=function(e){if(e.compareTo(BigInteger.ZERO)>0){var f=Math.ceil(100/d.getFee());return e.divide(BigInteger.valueOf(f))}else{return BigInteger.ZERO}};this.init=function(g){var h=g.find(".send");var f=g.find('select[name="repetitions"]');h.unbind().prop("disabled",true);g.find('input[name="send-value"]').unbind().bind("keyup change",function(){e()});function e(){var j=parseInt(f.val());if(j>0&&d.getIsEnabled()&&b>=d.getMinimumSupportedVersion()){var i=precisionToSatoshiBN(g.find('input[name="send-value"]').val());if(i.compareTo(BigInteger.valueOf(d.getMinimumOutputValue()))<0){h.prop("disabled",true)}else{if(i.compareTo(BigInteger.valueOf(d.getMaximumOutputValue()))>0){h.prop("disabled",true)}else{h.prop("disabled",false);h.unbind().click(function(){MyWallet.getSecondPassword(function(){loadScript("wallet/signer",function(){d.constructPlan(g,function(k){console.log("Created Plan");k.execute(function(){},function(l){MyWallet.makeNotice("error","misc-error",l)})},function(k){MyWallet.makeNotice("error","misc-error",k)})},function(k){MyWallet.makeNotice("error","misc-error",k)})},function(k){MyWallet.makeNotice("error","misc-error",k)})})}}}else{h.prop("disabled",true)}}MyWallet.setLoadingText("Fetching SharedCoin Info");$.ajax({dataType:"json",type:"POST",url:a,data:{method:"get_info",format:"json"},success:function(k){try{c=k;if(!d.getIsEnabled()){throw"Shared Coin is currently disabled"}if(b<d.getMinimumSupportedVersion()){throw"Version out of date. Please update your client or reload the page."}f.empty();for(var i=k.recommended_min_iterations;i<=k.recommended_max_iterations;i+=1){f.append('<option value="'+(i)+'">'+(i)+" Repetitions (Fee: "+((i)*d.getFee()).toFixed(2)+"%)</option>")}f.val(k.recommended_iterations)}catch(j){MyWallet.makeNotice("error","misc-error",j)}e()},error:function(i){h.prop("disabled",true);MyWallet.makeNotice("error","misc-error",i.responseText)}})}};