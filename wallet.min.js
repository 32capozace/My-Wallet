var encrypted_wallet_data=null;var guid=null;var cVisible;var password;var dpassword=null;var dpasswordhash;var sharedKey;var final_balance=0;var total_sent=0;var total_received=0;var n_tx=0;var n_tx_filtered=0;var isInitialized=false;var latest_block=null;var address_book=[];var transactions=[];var double_encryption=false;var tx_page=0;var tx_filter=0;var maxAddr=200;var addresses=[];var loading_text="";var sound_on=true;var offline=false;var unspent_cache=null;WEB_SOCKET_SWF_LOCATION="/Resources/WebSocketMain.swf";jQuery.fn.center=function(){this.css("top",($(window).height()-this.height())/2+$(window).scrollTop()+"px");this.css("left",($(window).width()-this.width())/2+$(window).scrollLeft()+"px");return this};$(window).resize(function(){$(".modal:visible").center()});function loadScript(c,d){if(document.getElementById(c)!=null){d();return}var b=document.createElement("script");b.type="text/javascript";b.async=true;b.src=c;b.id=c;b.addEventListener("load",function(f){d()},false);var a=document.getElementsByTagName("head")[0];a.appendChild(b)}function setLoadingText(a){$(".loading-text").text(a)}function hideNotice(a){$("#"+a).remove()}setInterval("doStuffTimer()",10000);function doStuffTimer(){try{if(WebSocket!=null){if(!offline&&isInitialized&&ws.readyState!=WebSocket.OPEN){websocketConnect()}}updateLatestBlockAge()}catch(a){}}function websocketConnect(){if(!window.WebSocket){loadScript(resource+"wallet/swfobject.js",function(){loadScript(resource+"wallet/web_socket.js",function(){WebSocket.__initialize();_websocketConnect()})})}else{_websocketConnect()}}function _websocketConnect(){if(offline){return}try{ws=new WebSocket("ws://api.blockchain.info:8335/inv");ws.onmessage=function(h){try{var d=jQuery.parseJSON(h.data);if(d.op=="status"){$("#status").html(d.msg)}else{if(d.op=="utx"){var c=transactions.length;while(--c){if(transactions[c].txIndex==d.x.tx_index){return}}try{if(sound_on){try{document.getElementById("beep").play(10)}catch(h){sound_on=false}}}catch(h){console.log(h)}var g=TransactionFromJSON(d.x);for(var f=0;f<transactions.length;++f){if(transactions[f].txIndex==g.txIndex){return}}var o=0;for(var f=0;f<g.inputs.length;f++){var j=g.inputs[f];var m=addresses[j.prev_out.addr];if(m!=null){var k=parseInt(j.prev_out.value);o-=k;m.balance-=k;total_sent+=k}}for(var f=0;f<g.out.length;f++){var b=g.out[f];var m=addresses[b.addr];if(m!=null){var k=parseInt(b.value);o+=k;m.balance+=k;total_received+=k}}g.result=o;final_balance+=o;n_tx++;g.setConfirmations(0);if(tx_filter==0&&tx_page==0){transactions.unshift(g);buildTransactionsView();buildReceiveCoinsView()}}else{if(d.op=="block"){if(sound_on){try{document.getElementById("beep").play(4)}catch(h){sound_on=false}}for(var f=0;f<d.x.txIndexes.length;++f){for(var n=0;n<transactions.length;++n){if(transactions[n].txIndex==d.x.txIndexes[f]){if(transactions[n].blockHeight==null||transactions[n].blockHeight==0){transactions[n].blockHeight=d.x.height;break}}}}setLatestBlock(BlockFromJSON(d.x));buildTransactionsView()}}}}catch(h){console.log(h);console.log(h.data)}};ws.onopen=function(){$("#status").html("CONNECTED.");var f='{"op":"blocks_sub"}';try{var c=getActiveAddresses();for(var b=0;b<c.length;++b){f+='{"op":"addr_sub", "addr":"'+c[b]+'"}'}}catch(d){alert(d)}ws.send(f)};ws.onclose=function(){$("#status").html("DISCONNECTED.")}}catch(a){console.log("Exception "+a)}}function makeNotice(b,f,e,d){if(e==null||e.length==0){return}var c='<div class="alert-message '+b+'" data-alert="alert"><a class="close">Ã—</a><p>'+e+"</p></div>";if($("#"+f).length>0){$("#"+f).html(c);return}var a=$("<div id="+f+">"+c+"</div>");$("#notices").append(a).hide().fadeIn(200);if(d!=null&&d>0){(function(){var g=a;setTimeout(function(){g.fadeOut(200,function(){$(this).remove()})},d)})()}}function noConvert(a){return a}function base58ToBase58(a){return decryptPK(a)}function base58ToBase64(a){var b=decodePK(a);return Crypto.util.bytesToBase64(b)}function base58ToHex(a){var b=decodePK(a);return Crypto.util.bytesToHex(b)}function base58ToSipa(a){var b=decodePK(a);while(b.length<32){b.unshift(0)}b.unshift(128);var c=Crypto.SHA256(Crypto.SHA256(b,{asBytes:true}),{asBytes:true});b=b.concat(c.slice(0,4));var d=Bitcoin.Base58.encode(b);return d}function makeWalletJSON(d){var c=noConvert;if(d=="base64"){c=base58ToBase64}else{if(d=="hex"){c=base58ToHex}else{if(d=="sipa"){c=base58ToSipa}else{if(d=="base58"){c=base58ToBase58}}}}var a='{\n	"guid" : "'+guid+'",\n	"sharedKey" : "'+sharedKey+'",\n';if(double_encryption&&dpasswordhash!=null&&c==noConvert){a+='	"double_encryption" : '+double_encryption+',\n	"dpasswordhash" : "'+dpasswordhash+'",\n'}a+='	"keys" : [\n';var e=false;for(var b in addresses){var f=addresses[b];a+='	{"addr" : "'+f.addr+'"';if(f.priv!=null){a+=',\n	 "priv" : "'+c(f.priv)+'"'}if(f.tag==2){a+=',\n	 "tag" : '+f.tag}if(f.label!=null){a+=',\n	 "label" : "'+f.label+'"'}a+="},\n";e=true}if(e){a=a.substring(0,a.length-2)}a+="\n	]";if(nKeys(address_book)>0){a+=',\n	"address_book" : [\n';for(var b in address_book){a+='	{"addr" : "'+b+'",\n';a+='	 "label" : "'+address_book[b]+'"},\n'}a=a.substring(0,a.length-2);a+="\n	]"}a+="\n}";return a}function pasteAddress(a){$("#recipient-container").find('input[name="send-to-address"]').last().val(a)}function deleteAddressBook(a){delete address_book[a];backupWallet();buildSendTxView()}function constructMyAddrSelect(a){for(var c in addresses){var d=addresses[c];if(d.tag==2){continue}var b=d.label;if(b==null){b=d.addr}if(d.balance>0){a.prepend('<option value="'+d.addr+'">'+b+" - "+formatBTC(d.balance)+" BTC </option>")}else{a.append('<option value="'+d.addr+'">'+b+"</option>")}}}function buildSendTxView(){if("send-coins"!=cVisible.attr("id")){return}var c=$("#address-book-tbl tbody");c.empty();for(var b in address_book){c.append("<tr><td>"+address_book[b]+'</td><td><div class="addr-book-entry">'+b+'</div></td><td style="width:16px" class="can-hide"><img src="'+resource+'delete.png" onclick="deleteAddressBook(\''+b+'\')" /></td><td><img src="'+resource+'paste.png" onclick="pasteAddress(\''+b+"')\"></tr>")}var d=$("#send-tx-form");var a=d.find("select");a.empty();constructMyAddrSelect(a);$("#change-addr").prepend('<option value="new">New Address</option>');a.prepend('<option value="any">Any Address</option>');a.val($("#target option:first").val());d.find('input[name="send-to-address"]').val("");d.find('input[name="send-value"]').val("");d.find('input[name="send-fees"]').val("0");var c=$("#recipient-container div:first-child").clone();$("#recipient-container").empty().append(c);var c=$("#escrow-recipient-container div:first-child").clone();$("#escrow-recipient-container").empty().append(c)}function importPyWalletJSONObject(d){var b=0;try{for(b=0;b<d.keys.length;++b){if(walletIsFull()){return}var a=new Bitcoin.ECKey(Crypto.util.hexToBytes(d.keys[b].hexsec));if(d.keys[b].addr==a.getBitcoinAddress().toString()){internalAddKey(d.keys[b].addr,encodePK(a.priv))}else{makeNotice("error","misc-error","Private key doesn't seem to match the address. Possible corruption",1000);return false}}}catch(c){makeNotice("error","misc-error","Exception caught parsing importing JSON. Incorrect format?",5000);return false}makeNotice("success","misc-success","Imported "+b+" private keys",5000)}function parseMultiBit(g){try{var a=false;var j=g.split("\n");for(var b=0;b<j.length;++b){var k=j[b];if(k==null||k.length==0|k.charAt(0)=="#"){continue}var c=k.split(" ");var f=c[0];if(f==null){continue}if(walletIsFull()){continue}var h=privateKeyStringToKey(f,"sipa");internalAddKey(h.getBitcoinAddress().toString(),encodePK(h.priv));a=true}if(a){return true}}catch(d){return false}}function importJSON(){var c=$("#import-json").val();if(c==null||c.length==0){throw"No import data provided!"}if(c.charAt(0)=="#"){if(parseMultiBit(c)){return true}}var f;try{try{f=jQuery.parseJSON(c);if(f==null){throw"null json"}}catch(d){var a=Crypto.AES.decrypt(c,password);f=jQuery.parseJSON(a);if(f==null){throw"null json"}}}catch(d){throw"Could not decode import data"}if(f==null||f.keys==null||f.keys.length==0){throw"No keys imported. Incorrect format?"}if(!getSecondPassword()){return false}if(f.keys[0].hexsec!=null){importPyWalletJSONObject(f)}else{if(f.double_encryption&&f.dpasswordhash!=dpasswordhash){throw"Wallet backup does not have the same second password"}for(var b=0;b<f.keys.length;++b){var g=f.keys[b].addr;if(g==null||g.length==0||g=="undefined"){continue}if(double_encryption&&!f.double_encryption){internalAddKey(g,encodePK(Bitcoin.Base58.decode(f.keys[b].priv)))}else{internalAddKey(g,f.keys[b].priv)}var g=addresses[g];g.label=f.keys[b].label;g.tag=f.keys[b].tag}if(f.address_book!=null){for(var b=0;b<f.address_book.length;++b){internalAddAddressBookEntry(f.address_book[b].addr,f.address_book[b].label)}}}$("#import-json").val("");return true}function getActiveAddresses(){var c=[];for(var a in addresses){var b=addresses[a];if(b.tag==2){continue}c.push(b.addr)}return c}function updateLatestBlockAge(){if(latest_block!=null){var a=new Date().getTime()-new Date(latest_block.time*1000).getTime();var b=Math.round(a/1000/60);if(b<=1){$("#latest-block-age").html("just now")}else{$("#latest-block-age").html(b+" minutes ago")}}}function setLatestBlock(b){$("#latest-block").show();$("#latest-block-height").html(b.height);var a=new Date(b.time*1000);$("#latest-block-time").html(dateToString(a));latest_block=b;updateLatestBlockAge()}Transaction.prototype.getCompactHTML=function(f,b){var a=this.result;var e="<tr><td>";if(a!=null){if(a>0){e+='<span class="label success">Received</span>'}else{if(a<0){e+='<span class="label important">Sent</span>'}else{if(a==0){e+='<span class="label">Moved</span>'}}}}e+='</td><td><ul class="txul short-addr">';if(a>=0){if(this.inputs.length>0){for(var d=0;d<this.inputs.length;d++){input=this.inputs[d];if(input.prev_out==null||input.prev_out.addr==null){e+="<li>No Input (Newly Generated Coins)</li>"}else{if(f[input.prev_out.addr]!=null){continue}e+=formatOutput(input.prev_out,f,b)}}}else{e+="<li>No inputs, transaction probably sent from self.</li>"}}else{for(var d=0;d<this.out.length;d++){if(this.out.length>1&&this.out[d].type==0&&f[this.out[d].addr]!=null){continue}e+=formatOutput(this.out[d],f,b)}}e+="</ul></td>";if(this.time>0){var c=new Date(this.time*1000);e+='<td class="can-hide">'+dateToString(c)+"</td>"}else{e+='<td class="can-hide"></td>'}if(a>=0){e+='<td style="color:green">'+formatMoney(a,true)+"</td>"}else{e+='<td style="color:red">'+formatMoney(a,true)+"</td>"}if(this.balance==null){e+='<td class="can-hide"></td>'}else{e+='<td class="can-hide">'+formatMoney(this.balance)+"</td>"}e+="</tr>";return e};function buildTransactionsView(){var h=$("#tx_display").val();var b=$("#addr_filter").val().toLowerCase();if(b.length==0){b=null}$("#transactions-summary").show();if(final_balance==null){$("#balance").html("Loading...")}else{$("#balance").html(formatMoney(final_balance,true))}if("my-transactions"!=cVisible.attr("id")){return}$("#summary-n-tx").html(n_tx);$("#summary-received").html(formatMoney(total_received,true));$("#summary-sent").html(formatMoney(total_sent,true));$("#summary-balance").html(formatMoney(final_balance,true));if(transactions.length==0){return}var e=null;var d=0;if(e!=null){clearInterval(e);e=null}var a=$("#transactions").empty();if(h==1){var l=$('<table class="zebra-striped"><tr><th style="width:100px">Type</th><th>To / From</th><th class="can-hide">Date</th><th>Amount</th><th class="can-hide">Balance</th></tr></table>');a.append(l);a=l}var m=function(){var p="";for(var o=d;o<transactions.length&&o<(d+5);++o){var n=transactions[o];if(n.blockHeight!=null&&n.blockHeight>0){var s=latest_block.height-n.blockHeight+1;if(s<=100){n.setConfirmations(latest_block.height-n.blockHeight+1)}}else{n.setConfirmations(0)}var r=true;if(b!=null){r=false;for(var q=0;q<n.inputs.length;q++){if(n.inputs[q].prev_out!=null&&n.inputs[q].prev_out.addr.toLowerCase().indexOf(b)>=0){r=true;break}}if(!r){for(var q=0;q<n.out.length;q++){if(n.out[q].addr.toLowerCase().indexOf(b)>=0||formatBTC(n.out[q].value)==b){r=true;break}}}}if(r){if(h==1){p+=n.getCompactHTML(addresses,address_book)}else{p+=n.getHTML(addresses,address_book)}}}a.append(p);d+=5;if(d<transactions.length){e=setTimeout(m,1)}};m();var c=$(".pagination ul").empty();if(tx_page==0&&transactions.length<50){c.hide();return}else{c.show()}var f=Math.ceil(n_tx_filtered/50);var j=" disabled";if(tx_page>0){j=""}c.append('<li onclick="setPage(tx_page+1)" class="prev'+j+'"><a>&larr; Previous</a></li>');for(var k=0;k<f&&k<=15;++k){var g="";if(tx_page==k){g=' class="active"'}c.append('<li onclick="setPage('+k+')"'+g+'><a class="can-hide">'+k+"</a></li>")}var j=" disabled";if(tx_page<f){j=""}c.append('<li onclick="setPage(tx_page+1)" class="next'+j+'"><a>Next &rarr;</a></li>')}function setFilter(a){tx_page=0;tx_filter=a;queryAPIMultiAddress()}function setPage(a){tx_page=a;scroll(0,0);queryAPIMultiAddress()}function parseMultiAddressJSON(c){var d=jQuery.parseJSON(c);$("#nodes-connected").html(d.info.nconnected);setLatestBlock(d.info.latest_block);transactions=[];if(d.wallet==null){total_received=0;total_sent=0;final_balance=0;n_tx=0;n_tx_filtered=0;return}total_received=d.wallet.total_received;total_sent=d.wallet.total_sent;final_balance=d.wallet.final_balance;n_tx=d.wallet.n_tx;n_tx_filtered=d.wallet.n_tx_filtered;for(var b=0;b<d.addresses.length;++b){addresses[d.addresses[b].address].balance=d.addresses[b].final_balance}for(var b=0;b<d.txs.length;++b){var a=TransactionFromJSON(d.txs[b]);transactions.push(a)}}function queryAPIMultiAddress(){if(offline){return}var a=getActiveAddresses();setLoadingText("Loading transactions");$.ajax({type:"POST",url:root+"multiaddr?filter="+tx_filter+"&offset="+tx_page*50,data:{"addr[]":a},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":jQuery.parseXML},success:function(b){try{parseMultiAddressJSON(b);buildReceiveCoinsView();buildTransactionsView()}catch(c){console.log(b);console.log(c)}try{if(tx_page==0&&tx_filter==0){localStorage.setItem("multiaddr",b)}}catch(c){}},error:function(b){console.log(b);makeNotice("error","misc-error","Error getting wallet balance from server",5000)},})}function extractKVFromHash(){var g=decodeURI(window.location.hash.replace("#",""));var f=[];if(g!=null&&g.length>0){var c=false;var d=g.split("|");for(var b=0;b<d.length;b+=2){var a=d[b];var e=d[b+1];f[a]=e}}return f}function didDecryptWallet(){try{var g=extractKVFromHash();var d=g.newaddr;if(d!=null){if(addresses[d]!=null){return}var b=new Bitcoin.Address(d);if(walletIsFull()){return}if(internalAddKey(value,null)){makeNotice("success","added-addr","Added Bitcoin Address "+d,5000);backupWallet()}else{makeNotice("error","error-addr","Error Adding Bitcoin Address "+d,5000)}}}catch(f){makeNotice("error","add-address-error","Error adding new address from page link",5000)}try{var a=localStorage.getItem("guid");if(a!=guid){localStorage.clear()}var c=localStorage.getItem("multiaddr");if(c!=null){parseMultiAddressJSON(c);buildTransactionsView()}localStorage.setItem("guid",guid)}catch(f){}queryAPIMultiAddress();changeView($("#home-intro"));makeNotice("success","misc-success","Sucessfully Decrypted Wallet",5000)}function internalRestoreWallet(){try{var a=Crypto.AES.decrypt(encrypted_wallet_data,password);if(a.length==0){makeNotice("error","misc-error","Error Decrypting Wallet",5000);return false}var d=jQuery.parseJSON(a);if(d.double_encryption!=null&&d.dpasswordhash!=null){double_encryption=d.double_encryption;dpasswordhash=d.dpasswordhash;if(double_encryption){$("#wallet-double-encryption-enabled").prop("checked",true)}}for(var b=0;b<d.keys.length;++b){var f=d.keys[b].addr;if(f==null||f.length==0||f=="undefined"){makeNotice("error","null-error","Your wallet contains an undefined address. This is a sign of possible curruption, please double check all your BTC is acounted for. Backup your wallet to remove this error.",15000);continue}internalAddKey(f,d.keys[b].priv);var f=addresses[f];f.tag=d.keys[b].tag;f.label=d.keys[b].label}if(d.address_book!=null){for(var b=0;b<d.address_book.length;++b){internalAddAddressBookEntry(d.address_book[b].addr,d.address_book[b].label)}}sharedKey=d.sharedKey;setIsIntialized();return true}catch(c){console.log(c);makeNotice("error","misc-error","Error decrypting wallet. Please check you entered your password correctly.",5000)}return false}function showPrivateKeyModal(d,a,f){var b=$("#private-key-modal");b.modal({keyboard:true,backdrop:"static",show:true});b.find(".address").text(f);try{loadScript(resource+"wallet/qr.code.reader.js",function(){loadScript(resource+"wallet/llqrcode.js",function(){var e=initQRCodeReader("qr-code-reader",function(h){try{var g=privateKeyStringToKey(h,"base58");if(g==null){a("Error decoding private key");b.modal("hide");return}clearInterval(e);try{d(g)}catch(i){}}catch(i){a("Error decoding private key "+i)}b.modal("hide")},resource+"wallet/");b.center();b.bind("hidden",function(){clearInterval(e)})})})}catch(c){console.log(c)}b.find(".btn.primary").unbind().click(function(){var h=b.find('input[name="key"]').val();var j=b.find('select[name="format"]').val();if(h.length==0){a("You must enter a private key to import");b.modal("hide");return}try{var g=privateKeyStringToKey(h,j);if(g==null){a("Error decoding private key");b.modal("hide");return}d(g)}catch(i){a("Error importing private key "+i)}b.modal("hide")});b.center();b.find(".btn.secondary").unbind().click(function(){a("User Cancelled");b.modal("hide")})}function getReadyForOffline(){var b=$("#offline-mode-modal");b.modal({keyboard:true,backdrop:"static",show:true});b.center();b.find(".btn.primary").attr("disabled",true);b.find(".btn.secondary").unbind().click(function(){b.modal("hide")});b.find(".notices").append($("#notices"));b.bind("hidden",function(){$("#main-notices-container").append($("#notices"));$("#restore-wallet-continue").removeAttr("disabled")});b.find(".ready").hide();b.find(".loading-indicator").show();new Image().src=resource+"qrcode.png";new Image().src=resource+"archive.png";new Image().src=resource+"label.png";new Image().src=resource+"paste.png";new Image().src=resource+"delete.png";new Image().src=resource+"arrow_right_green.png";new Image().src=resource+"arrow_right_red.png";var c=false;setLoadingText("Loading QR Code generator");loadScript(resource+"wallet/llqrcode.js",function(){loadScript(resource+"wallet/qr.code.reader.js",function(){initQRFlash("qr-code-reader",resource+"wallet/");c=true})});queryAPIMultiAddress();$.post(root+"unspent",{"addr[]":getActiveAddresses()},function(d){unspent_cache=d}).error(function(d){makeNotice("error","misc-error","Error getting unspent outputs. Maybe you disconnected your internet too early?");b.modal("hide")});var a=function(){if(!c||$.active){setTimeout(a,100);return}b.find(".ready").show();b.find(".btn.primary").removeAttr("disabled");b.find(".btn.primary").unbind().click(function(){$.get(root+"ping?"+new Date().getTime()).success(function(d){setLoadingText("Checking connectivity");makeNotice("error","misc-error","You must disconnect your internet before continuing",5000);return false}).error(function(d){$(".loading-indicator").remove();$("#status-container").html("OFFLINE MODE");offline=true;$("#email-backup-btn").attr("disabled",true);$("#my-account-btn").attr("disabled",true);$("#dropbox-backup-btn").attr("disabled",true);b.modal("hide");didDecryptWallet();console.log("Addr boook"+address_book)})})};setTimeout(a,1000)}function restoreWallet(){guid=$("#restore-guid").val();if(guid==null||guid.length!=36){makeNotice("error","misc-error","Invalid wallet identifier",5000);return false}else{hideNotice("guid-error")}password=$("#restore-password").val();if(password.length==0||password.length<8||password.length>255){makeNotice("error","misc-error","Password length must at least 10 characters",5000);return false}else{hideNotice("password-error")}var a=$("#restore-offline").is(":checked");if(a){try{if(localStorage==null){makeNotice("error","misc-error","Your browser does not support local stoage. Cannot login in offline mode.",5000);return false}else{if(localStorage.getItem("multiaddr")!=null){makeNotice("error","misc-error","Local storage not empty. Have you enabled private browsing?.",5000);return false}}}catch(c){console.log(c)}}if(encrypted_wallet_data==null){setLoadingText("Validating authentication key");var b=$("#restore-auth-key").val();if(b==null||b.length==0||b.length>255){makeNotice("error","misc-error","You must enter a Yubikey or Email confirmation code",5000);return false}$.post("/wallet",{guid:guid,payload:b,length:b.length,method:"get-wallet"},function(d){encrypted_wallet_data=d;if(internalRestoreWallet()){if(a){getReadyForOffline()}else{didDecryptWallet()}}else{if(a){$("#offline-mode-modal").modal("hide")}$("#restore-wallet-continue").removeAttr("disabled")}}).error(function(d){$("#restore-wallet-continue").removeAttr("disabled");makeNotice("error","misc-error",d.responseText,5000)})}else{if(internalRestoreWallet()){if(a){getReadyForOffline()}else{didDecryptWallet()}}else{if(a){$("#offline-mode-modal").modal("hide")}$("#restore-wallet-continue").removeAttr("disabled")}}return true}function setIsIntialized(){websocketConnect();$("#tech-faq").hide();$("#intro-text").hide();$("#large-summary").show();$("#status-container").show();isInitialized=true}function validateEmail(c){var b=c.lastIndexOf("@");var a=c.lastIndexOf(".");return(b<a&&b>0&&c.indexOf("@@")==-1&&a>2&&(c.length-a)>2)}function getAccountInfo(){if(offline){return}setLoadingText("Getting Wallet Info");$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"get-info"},function(a){if(a.email!=null){$("#wallet-email").val(a.email);$(".my-email").text(a.email)}$("#wallet-phrase").val(a.phrase);if(a.alias!=null){$("#wallet-alias").val(a.alias);$(".alias").text(a.alias);$(".alias").show(200)}if(a.dropbox_enabled==1){$("#wallet-dropbox-enabled").prop("checked",true)}else{$("#wallet-dropbox-enabled").prop("checked",false)}$("#wallet-http-url").val(a.http_url);$("#wallet-http-url").val(a.http_url);$("#wallet-skype").val(a.skype_username);$("#wallet-yubikey").val(a.yubikey);if(a.email_verified==0){$("#verify-email").show();$("#email-verified").hide()}else{$("#verify-email").hide();$("#email-verified").show()}}).error(function(a){makeNotice("error","misc-error",a.responseText)})}function emailBackup(){if(offline){return}setLoadingText("Sending email backup");$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"email-backup"},function(a){makeNotice("success","backup-success",a,5000)}).error(function(a){makeNotice("error","misc-error",a.responseText)})}function verifyEmail(a){if(offline){return}if(a==null||a.length==0||a.length>255){makeNotice("error","misc-error","You must enter a code to verify",5000);return}setLoadingText("Verifying Email");$.post("/wallet",{guid:guid,payload:a,sharedKey:sharedKey,length:a.length,method:"verify-email"},function(b){makeNotice("success","email-success",b,5000);$("#verify-email").hide();$("#email-verified").show(200)}).error(function(b){makeNotice("error","misc-error",b.responseText,5000);$("#verify-email").show(200);$("#email-verified").hide()})}function updatePubKeys(){if(notifications_type!=0){updateKV("Updating Public Keys","update-pub-keys",getActiveAddresses().join("|"))}}function updateKV(a,c,b){if(offline){return}if(b==null||b.length==0){makeNotice("error","misc-error",a+": Invalid value");return}setLoadingText(a);$.post("/wallet",{guid:guid,sharedKey:sharedKey,payload:b,method:c},function(d){makeNotice("success",c+"-success",d,5000)}).error(function(d){makeNotice("error",c+"-error",d.responseText,5000)})}function backupWallet(a,c,j,b){if(offline){return}try{if(a==null){a="update"}if(!isInitialized&&a!="insert"){return false}if(guid.length!=36){throw"Invalid wallet identifier"}var f=makeWalletJSON();var d=jQuery.parseJSON(f);if(d==null){throw"null json error"}if(d.keys.length==0){throw"Cannot backup wallet with no keys"}var i=Crypto.AES.encrypt(f,password);if(i.length==0){throw"Error enrypting the JSON output"}var h=Crypto.util.bytesToHex(Crypto.SHA256(i,{asBytes:true}));setLoadingText("Saving wallet");if(b==null){b=""}$.ajax({type:"POST",url:root+"wallet"+b,data:{guid:guid,length:i.length,payload:i,sharedKey:sharedKey,checksum:h,method:a},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":window.String},success:function(k){var m=false;for(var e in addresses){var l=addresses[e];if(l.tag==1){l.tag=0;m=true}if(m){buildReceiveCoinsView()}}if(a=="update"){updatePubKeys()}makeNotice("success","misc-success",k,5000);if(c!=null){c()}},error:function(e){makeNotice("error","misc-error",e.responseText,10000);if(j!=null){j()}}})}catch(g){makeNotice("error","misc-error",g,10000);throw g}}function encryptPK(a){if(double_encryption){if(dpassword==null){throw"Cannot encrypt private key without a password"}return Crypto.AES.encrypt(a,sharedKey+dpassword)}else{return a}return null}function encodePK(a){var b=Bitcoin.Base58.encode(a);return encryptPK(b)}function decryptPK(a){if(double_encryption){if(dpassword==null){throw"Cannot decrypt private key without a password"}return Crypto.AES.decrypt(a,sharedKey+dpassword)}else{return a}return null}function decodePK(b){var a=decryptPK(b);if(a!=null){return Bitcoin.Base58.decode(a)}return null}function getSecondPassword(){if(!double_encryption||dpassword!=null){return true}var b=prompt("Please enter your second password",null);if(b==null||b.length==0){makeNotice("error","misc-error","No password entered",5000);return false}var a=Crypto.SHA256(sharedKey+b);if(a==dpasswordhash){dpassword=b;return true}var c=Crypto.SHA256(b);if(c==dpasswordhash){dpassword=b;dpasswordhash=a;return true}makeNotice("error","misc-error","Second password incorrect",5000);return false}function setDoubleEncryption(f){try{if(double_encryption==f){return}if(f){var a=$("#double-password").val();var b=$("#double-password2").val();if(a==null||a.length==0||a.length<4||a.length>255){makeNotice("error","misc-error","Password must be 4 characters or more in length",5000);return}if(a!=b){makeNotice("error","misc-error","Passwords do not match.",5000);return}if(a==password){makeNotice("error","misc-error","Second password should not be the same as your main password.",5000);return}double_encryption=true;dpassword=a;for(var c in addresses){var h=addresses[c];h.priv=encodePK(Bitcoin.Base58.decode(h.priv))}dpasswordhash=Crypto.SHA256(sharedKey+a);dpassword=null;if(getSecondPassword()){var h=addresses[randomKey(addresses)];var d=new Bitcoin.ECKey(decodePK(h.priv));if(d.getBitcoinAddress().toString()!=h.addr){throw"Private key does not match bitcoin address"}backupWallet()}else{throw"Password not entered correctly"}}else{if(!getSecondPassword()){return}for(var c in addresses){var h=addresses[c];h.priv=decryptPK(h.priv)}double_encryption=false;dpassword=null;var h=addresses[randomKey(addresses)];var d=new Bitcoin.ECKey(decodePK(h.priv));if(d.getBitcoinAddress().toString()!=h.addr){throw"Private key does not match bitcoin address"}backupWallet()}}catch(g){window.location=root+"wallet/"+guid}}function checkAndSetPassword(){if(offline){return}var a=$("#password").val();var b=$("#password2").val();if(a!=b){makeNotice("error","misc-error","Passwords do not match.",5000);return false}if(a.length==0||a.length<10||a.length>255){makeNotice("error","misc-error","Password must be 10 characters or more in length",5000);return false}password=a;return true}function updatePassword(){if(offline){return}var a=$("#update-password-modal");a.modal({keyboard:true,backdrop:"static",show:true});a.center();a.find(".btn.primary").unbind().click(function(){a.modal("hide");var c=password;if(!checkAndSetPassword()){return false}try{backupWallet("update",function(){window.location=root+"wallet/"+guid+window.location.hash},function(){makeNotice("error","misc-error","Error syncing wallet. Password Not changed",5000);password=c})}catch(b){makeNotice("error","misc-error","Error syncing wallet. Password Not changed",5000);password=c}});a.find(".btn.secondary").unbind().click(function(){a.modal("hide")})}function changeView(a){if(a===cVisible){return}if(cVisible!=null){if($("#"+cVisible.attr("id")+"-btn").length>0){$("#"+cVisible.attr("id")+"-btn").parent().attr("class","")}cVisible.hide(200)}cVisible=a;cVisible.show(200);if($("#"+cVisible.attr("id")+"-btn").length>0){$("#"+cVisible.attr("id")+"-btn").parent().attr("class","active")}}function pushTx(a){if(offline){return}var b=a.serialize();var c=Crypto.util.bytesToHex(b);setLoadingText("Sending Transaction");$.post("/pushtx",{tx:c},function(d){}).success(function(d){makeNotice("success","misc-success",d,5000)}).error(function(d){makeNotice("error","misc-error",d.responseText)});return true}function randomKey(d){var a;var e=0;for(var b in d){if(Math.random()<1/++e){a=b}}return a}function makeTransaction(m,p,u,n,r,q,a){var j=BigInteger.ZERO;for(var x=0;x<m.length;++x){j=j.add(m[x].value)}var v=BigInteger.valueOf(1000000);var y=false;for(var x=0;x<m.length;++x){var s=m[x];if(s.m!=null){v=BigInteger.valueOf(5000000);y=true;break}}var C=new Bitcoin.Address(our_address);var d=BigInteger.ZERO;var D=BigInteger.ZERO;var t=null;if(a!=null){t=a.toString()}var c=null;if(p!=null){c=p.toString()}if(t==null){j=j.add(v)}if(u!=null){j=j.add(u)}var B=0;for(var x=0;x<n.length;++x){try{var o=new Bitcoin.Address(n[x].script.simpleOutPubKeyHash()).toString();if(o==null){throw"Unable to decode output address from transaction hash "+w.tx_hash}var w=n[x];if(t!=null&&o==t){if(D.compareTo(v)<0){D=D.add(w.value)}else{continue}}else{if(c!=null&&o!=c){continue}else{d=d.add(w.value)}}var k=Crypto.util.hexToBytes(w.tx_hash);var h=Crypto.util.bytesToBase64(Crypto.util.hexToBytes(w.tx_hash));r.push(new Bitcoin.TransactionIn({outpoint:{hash:h,hexhash:k,index:w.tx_output_n,value:w.value},script:w.script,sequence:4294967295}));B+=w.value*w.confirmations;if(d.compareTo(j)>=0&&(a==null||D.compareTo(v)>=0)){break}}catch(A){makeNotice("info","tx-error",A,5000)}}if(d.compareTo(j)<0){throw"Insufficient funds. Value Needed "+formatBTC(j.toString())+" BTC. Available amount "+formatBTC(d.toString())+" BTC"}var z=null;if(t==null){z=d.subtract(j)}else{z=d.add(D).subtract(j).subtract(v)}var g=new Bitcoin.Transaction();for(var x=0;x<r.length;x++){g.addInput(r[x])}for(var x=0;x<m.length;++x){var s=m[x];if(s.m!=null){g.addOutputScript(Bitcoin.Script.createMultiSigOutputScript(s.m,s.pubkeys),s.value)}else{g.addOutput(s.address,s.value)}}if(z>0){if(q!=null){g.addOutput(q,z)}else{if(p!=null){g.addOutput(p,z)}else{var l=getActiveAddresses();g.addOutput(new Bitcoin.Address(l[Math.floor(Math.random()*l.length)]),z)}}}var b=g.serialize(g).length+(114*g.ins.length);B/=b;var f=b/1024;if(B<57600000||f>1||y){g.addOutput(C,v.divide(BigInteger.valueOf(2)))}else{g.addOutput(C,v)}return g}function signInput(b,m,j,k){var a=j[k].script.simpleOutPubKeyHash();var c=new Bitcoin.Address(a).toString();var n=null;if(addresses[c].priv!=null){n=new Bitcoin.ECKey(decodePK(addresses[c].priv))}if(n==null){for(var e=0;e<m.length;++e){if(m[e].addr==c){n=m[e].priv;break}}}if(n==null){m.push({addr:c,priv:null});return false}if(n.getBitcoinAddress().toString()!=c.toString()){throw"Private key does not match bitcoin address"}var g=parseInt(1);var h=b.hashTransactionForSignature(j[k].script,k,g);var f=n.sign(h);var d=Bitcoin.ECDSA.serializeSig(f.r,f.s);d.push(g);var l=Bitcoin.Script.createInputScript(d,n.getPub());if(l==null){throw"Error creating input script"}b.ins[k].script=l;return true}function nKeys(c){var b=0,a;for(a in c){b++}return b}function internalDeletePrivateKey(a){addresses[a].priv=null}function internalDeleteAddress(a){delete addresses[a]}function internalAddAddressBookEntry(b,a){address_book[b]=a}function walletIsFull(a){if(nKeys(addresses)>=maxAddr){makeNotice("error","misc-error","We currently support a maximum of "+maxAddr+" private keys, please remove some unsused ones.",5000);return true}return false}function addressMatchesPrivateKey(c,a){var b=new Bitcoin.ECKey(Bitcoin.Base58.decode(a)).getBitcoinAddress().toString();if(b!=c){return false}return true}function internalAddKey(c,a){var b=addresses[c];if(b==null||b.length==0){addresses[c]={addr:c,priv:a,tag:null,label:null,balance:0};return true}else{if(b.priv==null){b.priv=a;return true}}return false}function showInventoryModal(b){var a=$("#inv-modal");a.modal({keyboard:true,backdrop:"static",show:true});a.center();setLoadingText("Getting Inventory Data");$("#inv-data").hide();$.get(root+"inv/"+b+"?format=json").success(function(g){$("#inv-data").show(200);$("#initial_ip").html('<a href="'+root+"ip-address/"+g.initial_ip+'">'+g.initial_ip+"</a>");$("#initial_time").html(dateToString(new Date(parseInt(g.initial_time))));$("#last_seen").html(dateToString(new Date(parseInt(g.last_time))));$("#inv_n_connected").html(g.nconnected);$("#total_relayed").html(g.relayed_count);$("#p_network").html(g.relayed_percent);var d=$("#inv_mining_nodes");d.empty();var c=[];for(var e=0;e<g.mining_nodes.length;++e){var f=g.mining_nodes[e];if(c[f.name]==null){c[f.name]=true;d.append('<li><a href="'+f.link+'">'+f.name+"</a></li>")}}if(g.mining_nodes==0){d.append("<li>No mining nodes have receivied this transaction. It is unlikely to be included in any blocks and will be clear in approximatly 24 hours.</li>")}}).error(function(c){a.modal("hide");makeNotice("error","misc-error","Error getting inventory data.")});a.find(".btn.secondary").unbind().click(function(){a.modal("hide")})}function labelAddress(c){var a=$("#label-address-modal");a.modal({keyboard:true,backdrop:"static",show:true});a.center();a.find(".address").text(c);var b=a.find('input[name="label"]');a.find(".address").text(c);b.val("");a.find(".btn.primary").unbind().click(function(){a.modal("hide");var d=b.val();if(d.length==0){makeNotice("error","misc-error","you must enter a label for the address",5000);return false}addresses[c].label=d;backupWallet("update",null,null);buildReceiveCoinsView()});a.find(".btn.secondary").unbind().click(function(){a.modal("hide")})}function addAddressBookEntry(){var c=$("#add-address-book-entry-modal");c.modal({keyboard:true,backdrop:"static",show:true});c.center();var a=c.find('input[name="label"]');var b=c.find('input[name="address"]');a.val("");b.val("");c.find(".btn.primary").unbind().click(function(){c.modal("hide");var f=a.val();var d=b.val();if(f.length==0){makeNotice("error","misc-error","you must enter a label for the address book entry",5000);return false}if(d.length==0){makeNotice("error","misc-error","you must enter a bitcoin address for the address book entry",5000);return false}var h;try{h=new Bitcoin.Address(d);if(h==null){throw"Null address"}}catch(g){makeNotice("error","misc-error","Bitcoin address invalid, please make sure you entered it correctly",5000);return false}if(address_book[d]!=null){makeNotice("error","misc-error","Bitcoin address already exists",5000);return false}makeNotice("success","misc-success","Added Address book entry",5000);internalAddAddressBookEntry(d,f);backupWallet();buildSendTxView()});c.find(".btn.secondary").unbind().click(function(){c.modal("hide")})}function deleteAddress(e){if(getActiveAddresses().length<=1){makeNotice("error","add-error","You must leave at least one active address",5000);return}e=addresses[e];var c=$("#delete-address-modal");c.modal({keyboard:true,backdrop:"static",show:true});c.center();c.find(".btn.primary").show();c.find(".btn.danger").show();c.find(".modal-body").show();$("#change-mind").hide();c.find("#to-delete-address").html(e.addr);c.find("#delete-balance").text("Balance "+formatBTC(e.balance)+" BTC");var d=false;var b=0;var a=null;changeMind=function(){$("#change-mind").show();$("#change-mind-time").text(5-b)};c.find(".btn.primary").unbind().click(function(){changeMind();c.find(".btn.primary").hide();c.find(".btn.danger").hide();a=setInterval(function(){if(d){return}if(sound_on){try{document.getElementById("beep").play(1)}catch(f){sound_on=false}}++b;changeMind();if(b==5){$("#delete-address-modal").modal("hide");makeNotice("warning","warning-deleted","Private Key Removed From Wallet",5000);internalDeletePrivateKey(e.addr);buildReceiveCoinsView();backupWallet();clearInterval(a)}},1000)});c.find(".btn.danger").unbind().click(function(){changeMind();c.find(".btn.primary").hide();c.find(".btn.danger").hide();a=setInterval(function(){if(d){return}if(sound_on){try{document.getElementById("beep").play(1)}catch(f){sound_on=false}}++b;changeMind();if(b==5){try{$("#delete-address-modal").modal("hide");makeNotice("warning","warning-deleted","Address & Private Key Removed From Wallet",5000);internalDeleteAddress(e.addr);buildReceiveCoinsView();backupWallet();queryAPIMultiAddress()}finally{clearInterval(a)}}},1000)});c.bind("hidden",function(){if(a){d=true;clearInterval(a);a=null}});c.find(".btn.secondary").unbind().click(function(){c.modal("hide")})}function formatAddresses(a,d){var c="";if(d.length==1){c=d[0].toString()}else{c="Escrow (<i>";for(var b=0;b<d.length;++b){c+=d[b].toString()+", "}c=c.substring(0,c.length-2);c+="</i> - "+a+" Required)"}return c}function setReviewTransactionContent(p,s){$("#rtc-hash").html(Crypto.util.bytesToHex(s.getHash()));$("#rtc-version").html(s.version);$("#rtc-from").html("");$("#rtc-to").html("");var t=BigInteger.ZERO;var r=BigInteger.ZERO;var k=BigInteger.ZERO;var f="send ";var o=true;var b=BigInteger.ZERO;for(var l=0;l<s.ins.length;++l){var h=s.ins[l];r=r.add(h.outpoint.value);k=k.add(h.outpoint.value);var d=null;try{d=new Bitcoin.Address(h.script.simpleInPubKeyHash())}catch(q){d="Unable To Decode Address"}$("#rtc-from").append(d+' <font color="green">'+formatBTC(h.outpoint.value.toString())+" BTC <br />")}for(var l=0;l<s.outs.length;++l){var n=s.outs[l];var c=n.value.slice();c.reverse();var u=new BigInteger(c);var g=[];var j=n.script.extractAddresses(g);$("#rtc-to").append(formatAddresses(j,g)+' <font color="green">'+formatBTC(u.toString())+" BTC </font><br />");t=t.add(u);r=r.subtract(u);if(g.length>1){if(f.length>0){f+=" and "}f+="<b>"+formatBTC(u.toString())+" BTC</b> to "+formatAddresses(j,g);o=false;k=k.subtract(u)}else{var a=g[0].toString();if(addresses[a]==null){if(a!=our_address){if(f.length>0){f+=" and "}f+="<b>"+formatBTC(u.toString())+" BTC</b> to "+a;o=false}}else{k=k.subtract(u);if(a!=our_address){b=b.add(u)}}}}if(r.compareTo(BigInteger.valueOf(1).multiply(BigInteger.valueOf(satoshi)))>=0){alert("Warning fees are very high for this transaction. Please double check each output!")}if(o==true){f="move <b>"+formatBTC(b.toString())+" BTC</b> between your own bitcoin addresses"}$("#rtc-basic-summary").html(f);$("#rtc-effect").html("-"+formatBTC(k.toString())+" BTC");$("#rtc-fees").html(formatBTC(r.toString())+" BTC");$("#rtc-value").html(formatBTC(t.toString())+" BTC");p.center()}function txFullySigned(a){var c=$("#new-transaction-modal");try{c.find(".modal-header h3").html("Transaction ready to be sent.");c.find("#missing-private-key").hide();c.find("#review-tx").show();setReviewTransactionContent(c,a);var b=c.find(".btn.primary");setLoadingText("Checking Connectivity");if(!offline){b.attr("disabled",false);b.text("Send Transaction");b.unbind().click(function(){b.attr("disabled",true);pushTx(a);c.modal("hide")})}else{c.find(".modal-header h3").html("Created Offline Transaction.");b.attr("disabled",false);b.text("Show Offline Instructions");b.unbind().click(function(){b.attr("disabled",true);c.find("#missing-private-key").hide();c.find("#review-tx").hide();c.find("#offline-transaction").show();var e=a.serialize();var f=Crypto.util.bytesToHex(e);c.find('#offline-transaction textarea[name="data"]').val(f)})}}catch(d){makeNotice("error","misc-error",d,5000);c.modal("hide");throw d}}function txConstructSecondPhase(l,b,c,h,j,i,k){var m=$("#new-transaction-modal");var e=[];var d=makeTransaction(l,b,c,h,e,i,k);var a=$("#tx-sign-progress").show(200);if(d==null){makeNotice("error","misc-error","Error Creating Transaction",5000);m.modal("hide");return}var g=0;var f=0;a.find(".t").text(d.ins.length);signOne=function(){setTimeout(function(){if(!m.is(":visible")){return}a.find(".n").text(f+1);if(signInput(d,j,e,f)){++f;if(f==d.ins.length){a.hide();txFullySigned(d)}else{signOne()}}else{if(j.length>0){a.hide();var o=null;for(var n=0;n<j.length;++n){if(j[n].priv==null){o=j[n];break}}if(o==null){makeNotice("error","misc-error","Unknown error signing transaction",5000);m.modal("hide");return}showPrivateKeyModal(function(p){if(o.addr!=p.getBitcoinAddress().toString()){makeNotice("error","misc-error","The private key you entered does not match the bitcoin address",5000);return}o.priv=p;a.show();signOne()},function(p){makeNotice("error","misc-error",p,5000);return},o.addr)}else{makeNotice("error","misc-error","Unknown error signing transaction");m.modal("hide");return}}},1)};signOne()}function apiGetOutScript(d,b,c,a){setLoadingText("Getting Output Script");$.get(root+"q/outscript?tx_index="+d+"&tx_output_n="+b).success(function(e){if(e==null||e.length==0){a()}else{c(new Bitcoin.Script(Crypto.util.hexToBytes(e)))}}).error(function(e){a()})}function apiGetPubKey(c,b,a){setLoadingText("Getting Pub Key");$.get(root+"q/pubkeyaddr/"+c).success(function(d){if(d==null||d.length==0){a()}else{b(Crypto.util.hexToBytes(d))}}).error(function(d){a()})}function newEscrowTx(){if(!getSecondPassword()){return}var h=null;var a=$("#send-escrow-form");var i=[];var c=0;var f=false;var e=a.find('input[name="send-value"]');console.log(e.val());var g=Bitcoin.Util.parseValue(e.val());if(g==null||g.compareTo(BigInteger.ZERO)<=0){throw"You must enter a send amount greater than zero"}var d=parseInt(a.find('select[name="escrow-m"]').val());a.find('input[name="send-to-address"]').each(function(){var j=$(this).val();++c;if(j==null){throw"You must enter a bitcoin address for each recipient"}if(j.length==130){i.push(Crypto.util.hexToBytes(j))}else{if(addresses[j]!=null&&addresses[j].priv!=null){i.push(new Bitcoin.ECKey(decodePK(addresses[j].priv)).getPub())}else{apiGetPubKey(j,function(k){i.push(k)},function(){makeNotice("error","pub-error","Could not get pubkey for address: "+j,5000);f=true})}}});if(c==1){throw"An escrow transaction should have at least two recipients"}if(d>c){throw"Not enough recipients specified for redemption conditions"}var b=setInterval(function(){if(f){clearInterval(b);return}if(i.length==c){clearInterval(b);var k=[{value:g,m:d,pubkeys:i}];var l=null;var n=null;var j=null;var m=null;txConstructFirstPhase(k,l,n,j,m)}},1000)}function txConstructFirstPhase(i,a,f,d,h){var j=$("#new-transaction-modal");try{j.find("#offline-transaction").hide();j.find("#missing-private-key").hide();j.find("#review-tx").hide();j.find(".modal-header h3").html("Creating transaction");j.find("#tx-sign-progress").hide();j.modal({keyboard:true,backdrop:"static",show:true});j.center();j.find(".btn.primary").attr("disabled",true);j.find(".btn.primary").text("Send Transaction");j.find(".btn.secondary").unbind().click(function(){j.modal("hide")});j.find(".notices").append($("#notices"));j.bind("hidden",function(){$("#main-notices-container").append($("#notices"))});var b=function(q){try{var k=[];var o=[];for(var n=0;n<q.unspent_outputs.length;++n){var l;try{l=new Bitcoin.Script(Crypto.util.hexToBytes(q.unspent_outputs[n].script))}catch(p){makeNotice("error","misc-error","Error decoding script: "+p);continue}var m={script:l,value:BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(q.unspent_outputs[n].value_hex)),tx_output_n:q.unspent_outputs[n].tx_output_n,tx_hash:q.unspent_outputs[n].tx_hash,confirmations:q.unspent_outputs[n].confirmations};k.push(m)}j.find(".modal-header h3").html("Signing Transaction");txConstructSecondPhase(i,a,f,k,o,d,h)}catch(p){makeNotice("error","misc-error","Error creating transaction: "+p,5000);j.modal("hide");return false}};if(offline){b(unspent_cache)}else{if(d=="new"){var g=generateNewAddressAndKey();backupWallet("update",function(){d=g;buildSendTxView();getUnspentAndProceed(i,a,f,d,h)},function(){makeNotice("error","misc-error","Error syncing wallet. Transaction cancelled");return})}else{setLoadingText("Getting Unspent Outputs");$.post(root+"unspent",{"addr[]":getActiveAddresses()},function(e){b(e)}).error(function(e){j.modal("hide");makeNotice("error","misc-error","Error getting unspent outputs. Please check your internet connection.")})}}}catch(c){makeNotice("error","misc-error",c);j.modal("hide")}}function newTx(){if(!getSecondPassword()){return}var j=null;var f=null;var h=null;var a=null;var i=[];$("#recipient-container").children().each(function(){var p=$(this);var k=p.find('input[name="send-to-address"]');var o=p.find('input[name="send-value"]');var l=0;var n;try{l=Bitcoin.Util.parseValue(o.val());if(l==null||l.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(m){throw"Invalid send amount"}if(k.val().length==0){throw"You must enter a bitcoin address for each recipient"}try{n=new Bitcoin.Address(k.val())}catch(m){throw"Invalid to address: "+m}i.push({address:n,value:l})});if(i.length==0){throw"A transaction must have at least one recipient"}if($("#send-from-address").val()!="any"){try{a=new Bitcoin.Address($("#send-from-address").val())}catch(d){makeNotice("error","from-error","Invalid from address: "+d,5000);return false}}if(show_adv){var b=$("#fee-addr").val();if(b!="any"){try{h=new Bitcoin.Address(b)}catch(d){makeNotice("error","fee-error","Invalid fee address: "+d,5000);return false}}if(h!=null&&a!=null&&a.toString()==h.toString()){makeNotice("error","misc-error","From address and Fee address cannot be the same",5000);return false}var c=$("#change-addr").val();if(c!="any"&&f!="new"){try{f=new Bitcoin.Address(c)}catch(d){makeNotice("error","change-error","Invalid change address: "+d,5000);return false}}}var g;try{g=Bitcoin.Util.parseValue($("#send-fees").val());if(g==null||g.compareTo(BigInteger.ZERO)<0){throw"Fees cannot be negative"}}catch(d){makeNotice("error","misc-error","Invalid fee value",5000);return false}txConstructFirstPhase(i,a,g,f,h);return true}function populateImportExportView(){var d=$("#export-tabs .active").text();try{if(d=="Export Unencrypted"){if(!getSecondPassword()){return}var a=makeWalletJSON($("#export-priv-format").val());$("#json-unencrypted-export").val(a)}else{if(d=="Export"){var a=makeWalletJSON();var c=Crypto.AES.encrypt(a,password);$("#json-crypted-export").val(c)}else{if(d=="Paper Wallet"){$("#paper-wallet").empty();loadScript(resource+"wallet/jquery.qrcode.min.js",function(){var e=$("#paper-wallet");if(!getSecondPassword()){return}for(var n in addresses){var k=addresses[n];var h="Online Mode";if(k.tag==1){h="Offline Mode"}if(k.priv==null){continue}var f=decryptPK(k.priv);if(f==null){continue}var i=$("<tr></tr>");var j=$("<td></td>");var l=makeQRCode(250,250,1,f);j.append(l);i.append(j);var m="";if(k.label!=null){m=k.label+" - "}var g=$('<td style="padding-top:25px;"><h3>'+k.addr+"</h3><br /><small><p><b>"+f+"</b></p></small><br /><p>"+h+"</p><br /><p>"+m+"Balance "+formatBTC(k.balance)+" BTC</p> </td>");i.append(g);if(k.balance>0){e.prepend(i)}else{e.append(i)}}})}}}}catch(b){makeNotice("error","misc-error","Error Exporting keys",5000);return}}function dropboxBackup(){window.open(root+"wallet/dropbox-login?guid="+guid+"&sharedKey="+sharedKey)}function downloadBackup(){window.open(root+"wallet/wallet.aes.json?guid="+guid+"&sharedKey="+sharedKey)}function bind(){$("#notifications-form select").change(function(){var a=$(this).val();notifications_type=parseInt(a);updateKV("Updating Notifications Type","update-notifications-type",notifications_type);$("#notifications-form div").hide().eq(a).show(200);if(a!=0){updatePubKeys()}});$("#two-factor-select").change(function(){var a=parseInt($(this).val());updateKV("Updating Two Factor Authentication","update-auth-type",a);if(a==0){$("#two-factor-yubikey").hide();$("#two-factor-email").hide();$("#two-factor-none").show(200)}else{if(a==1||a==3){$("#two-factor-none").hide();$("#two-factor-email").hide();$("#two-factor-yubikey").show(200)}else{if(a==2){$("#two-factor-none").hide();$("#two-factor-yubikey").hide();$("#two-factor-email").show(200)}}}});$("#new-addr").click(function(){try{if(!getSecondPassword()){return}generateNewAddressAndKey();backupWallet()}catch(a){makeNotice("error","misc-error",a)}});$("#wallet-email").change(function(b){var a=$(this).val();if(!validateEmail(a)){makeNotice("error","misc-error","Email address is not valid",5000);return}updateKV("Updating Email","update-email",a);$("#verify-email").show(200);$("#email-verified").hide()});$("#wallet-double-encryption-enabled").change(function(a){if($(this).is(":checked")){setDoubleEncryption(true)}else{setDoubleEncryption(false)}if(double_encryption){$(this).prop("checked",true)}else{$(this).prop("checked",false)}});$("#wallet-email-code").change(function(a){verifyEmail($(this).val())});$("#wallet-yubikey").change(function(a){updateKV("Updating Yubikey","update-yubikey",$(this).val())});$("#wallet-skype").change(function(a){updateKV("Updating Skype Username","update-skype",$(this).val())});$("#wallet-http-url").change(function(a){updateKV("Updating HTTP url","update-http-url",$(this).val())});$("#wallet-phrase").change(function(b){var a=$(this).val();if(a==null||a.length==0||a.length>255){makeNotice("error","misc-error","You must enter a secret phrase",5000);return}updateKV("Updating Secret Phrase","update-phrase",a)});$("#wallet-dropbox-enabled").change(function(a){var b=false;if($(this).is(":checked")){b=true}updateKV("Updating Dropbox Settings","update-dropbox-enabled",b)});$("#wallet-alias").change(function(a){$(this).val($(this).val().replace(/[\.,\/ #!$%\^&\*;:{}=`~()]/g,""));if($(this).val().length>0){$(".alias").fadeIn(200);$(".alias").text($(this).val())}updateKV("Updating Alias","update-alias",$(this).val())});$("#filter").change(function(){setFilter($(this).val())});$("#tx_display").change(function(){SetCookie("tx_display",$(this).val());buildTransactionsView()});$("#addr_filter").keyup(function(){buildTransactionsView()});$("#update-password-btn").click(function(){updatePassword()});$("#email-backup-btn").click(function(){emailBackup()});$("#dropbox-backup-btn").click(function(){dropboxBackup()});$("#download-backup-btn").click(function(){downloadBackup()});$("#wallet-login").unbind().click(function(){try{var a=localStorage.getItem("guid");if(a!=null){window.location=root+"wallet/"+a;return}}catch(b){console.log(b)}window.location=root+"wallet/login"});$("#restore-wallet-continue").click(function(b){b.preventDefault();var a=$("#restore-guid").val();if(guid!=a&&a!=null){window.location=root+"wallet/"+a;return}$(this).attr("disabled",true);if(!restoreWallet()){$(this).attr("disabled",false)}});$("#import-export-btn").click(function(){if(!isInitialized){return}$("#import-json-btn").unbind().click(function(){if(!isInitialized){return}$(this).attr("disabled",true);try{if(importJSON()){changeView($("#receive-coins"));buildReceiveCoinsView();backupWallet();queryAPIMultiAddress()}}catch(b){makeNotice("error","misc-error",b,5000)}$(this).attr("disabled",false)});$("#import-address-btn").unbind().click(function(){var c=$.trim($("#import-address-address").val());if(c.length=0){makeNotice("error","misc-error","You must enter an address to import",5000);return}if(walletIsFull()){return}try{var b=new Bitcoin.Address(c);if(b.toString()!=c){makeNotice("error","misc-error","Inconsistency between addresses",5000);return}if(internalAddKey(c,null)){makeNotice("success","added-address","Sucessfully Added Address "+b,5000);buildReceiveCoinsView();backupWallet();queryAPIMultiAddress()}else{makeNotice("error","add-error","Error Adding Address "+b,5000)}}catch(d){makeNotice("error","misc-error","Error importing address: "+d,5000);return}});$("#import-private-scan").unbind().click(function(){if(!isInitialized){return}if(!getSecondPassword()){return}if(walletIsFull()){return}showPrivateKeyModal(function(b){var c=b.getBitcoinAddress().toString();if(internalAddKey(c,encodePK(b.priv))){buildReceiveCoinsView();backupWallet();queryAPIMultiAddress();makeNotice("success","added-adress","Added bitcoin address "+c,5000)}else{makeNotice("error","misc-error","Unable to add private key for bitcoin address "+c)}},function(b){makeNotice("error","misc-error",b,5000);return},"Any Private Key")});var a=$("#import-private-key");a.find('button[name="add"]').unbind().click(function(){if(!isInitialized){return}var c=a.find('input[name="key"]').val();var f=a.find('select[name="format"]').val();try{if(c.length==0){throw"You must enter a private key to import"}if(walletIsFull()){return}if(!getSecondPassword()){return}var b=privateKeyStringToKey(c,f);if(b==null){throw"Decode returned null key"}var g=b.getBitcoinAddress().toString();if(g==null||g.length==0||g=="undefined"){throw"Unable to decode bitcoin addresses from private key"}if(internalAddKey(g,encodePK(b.priv))){buildReceiveCoinsView();backupWallet();queryAPIMultiAddress();makeNotice("success","added-adress","Added bitcoin address "+g,5000)}else{throw"Unable to add private key for bitcoin address "+g}}catch(d){console.log(d);makeNotice("error","misc-error","Error importing private key: "+d,5000);return}a.find('input[name="key"]').val("")});changeView($("#import-export"));populateImportExportView()});$("#add-address-book-entry-btn").click(function(){addAddressBookEntry()});$("#my-account-btn").click(function(){if(!isInitialized){return}getAccountInfo();changeView($("#my-account"))});$("#home-intro-btn").click(function(){if(!isInitialized){return}changeView($("#home-intro"))});$("#my-transactions-btn").click(function(){if(!isInitialized){return}changeView($("#my-transactions"));buildTransactionsView()});$("#send-coins-btn").click(function(){if(!isInitialized){return}changeView($("#send-coins"));buildSendTxView()});$("#send-form-reset-btn").click(function(){buildSendTxView()});$("#send-tx-btn").click(function(){try{newTx()}catch(a){makeNotice("error","misc-error",a,5000)}});$("#escrow-send-form-reset-btn").click(function(){buildSendTxView()});$("#escrow-send-tx-btn").click(function(){try{newEscrowTx()}catch(a){makeNotice("error","misc-error",a,5000)}});$("#escrow-add-recipient").click(function(){if(!isInitialized){return}var a=$("#escrow-recipient-container");var b=a.find("div:first-child").clone();b.appendTo(a);b.find('input[name="send-to-address"]').val("")});$("#add-recipient").click(function(){if(!isInitialized){return}var a=$("#recipient-container div:first-child").clone();a.appendTo($("#recipient-container"));a.find('input[name="send-to-address"]').val("");a.find('input[name="send-value"]').val("")});$("#receive-coins-btn").click(function(){if(!isInitialized){return}changeView($("#receive-coins"));buildReceiveCoinsView()});$("#export-priv-format").change(function(b){var a=makeWalletJSON($("#export-priv-format").val());$("#json-unencrypted-export").val(a)});$("#export-tabs").bind("change",function(a){populateImportExportView()})}function privateKeyStringToKey(b,d){var a=null;if(d=="base58"){a=Bitcoin.Base58.decode(b)}else{if(d=="base64"){a=Crypto.util.base64ToBytes(b)}else{if(d=="hex"){a=Crypto.util.hexToBytes(b)}else{if(d=="mini"){a=parseMiniKey(b)}else{if(d=="sipa"){var c=Bitcoin.Base58.decode(b);c.shift();a=c.slice(0,c.length-4)}else{throw"Unsupported key format"}}}}}if(a.length!=32){throw"Result not 32 bytes in length"}return new Bitcoin.ECKey(a)}$(document).ready(function(){setTimeout(bind,10);$("body").ajaxStart(function(){$(".loading-indicator").fadeIn(200)});$("body").ajaxStop(function(){$(".loading-indicator").fadeOut(200)});$(".tabs").tabs();if(initial_error!=null){makeNotice("error","fatal_error",initial_error)}if(guid==null){cVisible=$("#getting-started")}else{if(guid.length==0){try{var a=localStorage.getItem("guid");if(guid!=a&&a!=null){window.location=root+"wallet/"+a;return}}catch(b){console.log(b)}}cVisible=$("#restore-wallet")}cVisible.show()});function parseMiniKey(b){var c=Crypto.SHA256(b+"?");switch(c.slice(0,2)){case"00":var d=Crypto.SHA256(b);return d;break;case"01":var a=Crypto.util.hexToBytes(c.slice(2,4))[0];var e=Math.round(Math.pow(2,(a/4)));var d=Crypto.PBKDF2(b,"Satoshi Nakamoto",32,{iterations:e});return d;break;default:console.log("invalid key");break}}function guidGenerator(){var a=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a())}function hideqrcode(b,a){$(".qrcode").remove();$(".popover").remove();$("#"+b).popover("hide")}function showQRCodeModal(c){var b=$("#qr-code-modal");b.modal({keyboard:true,backdrop:"static",show:true});b.center();var a=b.find(".modal-body");loadScript(resource+"wallet/jquery.qrcode.min.js",function(){var e=makeQRCode(300,300,1,c);a.find(".data").empty().append(e)});var d=addresses[c];if(d!=null&&d.priv!=null&&(!double_encryption||dpassword!=null)){a.find(".pubkey").text(Crypto.util.bytesToHex(new Bitcoin.ECKey(decodePK(d.priv)).getPub()))}else{a.find(".pubkey").text("Unable to display")}a.find(".code").text(c);b.find(".btn.secondary").unbind().click(function(){b.modal("hide")})}function internalArchive(a){buildReceiveCoinsView();buildSendTxView();buildTransactionsView();if(archTimer!=null){clearInterval(archTimer);archTimer=null}archTimer=setTimeout(function(){backupWallet("update",null,null);queryAPIMultiAddress()},3000)}var archTimer;function unArchiveAddr(a){var a=addresses[a];if(a.tag==2){a.tag=0;internalArchive()}else{makeNotice("error","add-error","Cannot unarchive this address",5000)}}function archiveAddr(a){if(getActiveAddresses().length<=1){makeNotice("error","add-error","You must leave at least one active address",5000);return}var a=addresses[a];if(a.tag==null||a.tag==0){a.tag=2;internalArchive()}else{makeNotice("error","add-error","Cannot archive this address",5000)}}function buildReceiveCoinsView(){if("receive-coins"!=cVisible.attr("id")){return}var e;var a;for(var i in addresses){var f=addresses[i];var h="";if(f.tag==1){h=' <font color="red">(Not Synced)</font>'}else{if(f.priv==null){h=' <font color="red">(Watch Only)</font>'}}var b=formatBTC(f.balance)+' <span class="can-hide">BTC</span>';var c="";var g=f.addr;if(f.label!=null){g=f.label;c='<span class="can-hide"> - '+f.addr+"</span>"}var d='<tr><td style="width:20px;"><img id="qr'+f.addr+'" onclick="showQRCodeModal(\''+f.addr+'\')" src="'+resource+'qrcode.png" /></td><td><div class="short-addr"><a href="'+root+"address/"+f.addr+'" target="new">'+g+"</a>"+c+" "+h+"<div></td>";if(f.tag!=2){d+='<td><span id="'+f.addr+'" style="color:green">'+b+"</span></td>"}d+='<td style="width:16px"><img class="adv" src="'+resource+'delete.png" onclick="deleteAddress(\''+f.addr+"')\" /></td>";if(f.tag==2){d+='<td style="width:16px"><img src="'+resource+'unarchive.png" onclick="unArchiveAddr(\''+f.addr+"')\" /></td>"}else{if(f.tag==null||f.tag==0){d+='<td style="width:16px"><img src="'+resource+'archive.png" onclick="archiveAddr(\''+f.addr+"')\" /></td>"}}d+='<td style="width:16px"><img src="'+resource+'label.png" onclick="labelAddress(\''+f.addr+"')\" /></td>";d+="</tr>";if(f.tag==2){a+=d}else{e+=d}}$("#my-addresses tbody").empty().append(e);$("#archived-addr tbody").empty().append(a)}function generateNewAddressAndKey(){if(walletIsFull()){return false}var a=new Bitcoin.ECKey(false);if(a==null){throw"Unable to generate a new bitcoin address."}var c=a.getBitcoinAddress();if(c==null){throw"Generated invalid bitcoin address."}if(internalAddKey(c,encodePK(a.priv))){addresses[c].tag=1;buildReceiveCoinsView();makeNotice("info","new-address","Generated new bitcoin address "+c,5000);try{ws.send('{"op":"addr_sub", "addr":"'+c+'"}')}catch(b){}}else{throw"Unable to add generated bitcoin address."}return c};