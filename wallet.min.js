var encrypted_wallet_data=null;var guid=null;var transactions=[];var addresses=[];var private_keys=[];var cVisible;var password;var sharedKey;var final_balance=0;var total_sent=0;var total_received=0;var n_tx=0;var satoshi=parseInt(100000000);var isInitialized=false;var latest_block=null;var balances=[];var address_book=[];var loading_text="";var block_heights=[];var our_address="1A8JiWcwvpY7tAopUkSnGuEYHmzGYfZPiq";var sound_on=true;var offline=false;var unspent_cache=null;var downloadify_initd=false;var address_tags=[];jQuery.fn.center=function(){this.css("top",($(window).height()-this.height())/2+$(window).scrollTop()+"px");this.css("left",($(window).width()-this.width())/2+$(window).scrollLeft()+"px");return this};$(window).resize(function(){$(".modal:visible").center()});function loadScript(c,d){if(document.getElementById(c)!=null){d();return}var b=document.createElement("script");b.type="text/javascript";b.async=true;b.src=c;b.id=c;b.addEventListener("load",function(f){d()},false);var a=document.getElementsByTagName("head")[0];a.appendChild(b)}function setLoadingText(a){$(".loading-text").text(a)}function hideNotice(a){$("#"+a).remove()}WEB_SOCKET_SWF_LOCATION="/Resources/WebSocketMain.swf";setInterval("doStuffTimer()",10000);function doStuffTimer(){try{if(WebSocket!=null){if(!offline&&isInitialized&&ws.readyState!=WebSocket.OPEN){websocketConnect()}}updateLatestBlockAge()}catch(a){}}function websocketConnect(){if(offline){return}try{ws=new WebSocket("ws://api.blockchain.info:8335/inv");ws.onmessage=function(g){try{var c=jQuery.parseJSON(g.data);if(c.op=="status"){$("#status").html(c.msg)}else{if(c.op=="utx"){for(var d=0;d<transactions.length;++d){if(transactions[d].txIndex==c.x.tx_index){return}}try{if(sound_on){try{document.getElementById("beep").play(10)}catch(g){sound_on=false}}}catch(g){console.log(g)}var f=TransactionFromJSON(c.x);var l=0;for(var d=0;d<f.inputs.length;d++){var h=f.inputs[d];if(address_tags[h.prev_out.addr]!=null){var j=parseInt(h.prev_out.value);l-=j;balances[h.prev_out.addr]-=j;total_sent+=j}}for(var d=0;d<f.out.length;d++){var b=f.out[d];if(address_tags[b.addr]!=null){var j=parseInt(b.value);l+=j;balances[b.addr]+=j;total_received+=j}}f.result=l;final_balance+=l;n_tx++;transactions.unshift(f);f.setConfirmations(0);buildTransactionsView();buildReceiveCoinsView()}else{if(c.op=="block"){if(sound_on){try{document.getElementById("beep").play(4)}catch(g){sound_on=false}}for(var d=0;d<c.x.txIndexes.length;++d){for(var k=0;k<transactions.length;++k){if(transactions[k].txIndex==c.x.txIndexes[d]){if(transactions[k].blockIndex==null||transactions[k].blockIndex.length==0){transactions[k].blockIndex=c.x.blockIndex;break}}}}setLatestBlock(BlockFromJSON(c.x))}}}}catch(g){console.log(g);console.log(g.data)}};ws.onopen=function(){$("#status").html("CONNECTED.");var f='{"op":"blocks_sub"}';try{var b=getMyHash160s();for(var c=0;c<b.length;++c){f+='{"op":"addr_sub", "hash":"'+b[c]+'"}'}}catch(d){alert(d)}ws.send(f)};ws.onclose=function(){$("#status").html("DISCONNECTED.")}}catch(a){}}function makeNotice(b,f,e,d){if(e==null||e.length==0){return}var c='<div class="alert-message '+b+'" data-alert="alert"><a class="close">Ã—</a><p>'+e+"</p></div>";if($("#"+f).length>0){$("#"+f).html(c);return}var a=$("<div id="+f+">"+c+"</div>");$("#notices").append(a).hide().fadeIn(200);if(d!=null&&d>0){(function(){var g=a;setTimeout(function(){g.fadeOut(200,function(){$(this).remove()})},d)})()}}function base58ToBase58(a){return a}function base58ToBase64(a){var b=Bitcoin.Base58.decode(a);return Crypto.util.bytesToBase64(b)}function base58ToHex(a){var b=Bitcoin.Base58.decode(a);return Crypto.util.bytesToHex(b)}function makeWalletJSON(d){var c=base58ToBase58;if(d=="base64"){c=base58ToBase64}else{if(d=="hex"){c=base58ToHex}}var a='{\n	"guid" : "'+guid+'",\n	"sharedKey" : "'+sharedKey+'",\n';a+='	"keys" : [\n';for(var b=0;b<addresses.length;++b){var e=addresses[b];a+='	{"addr" : "'+e+'"';if(private_keys[e]!=null){a+=',\n	 "priv" : "'+c(private_keys[e])+'"'}if(address_tags[e]!=null&&address_tags[e]!=0){a+=',\n	 "tag" : '+address_tags[e]}a+="}";if(b<addresses.length-1){a+=",\n"}}a+="\n	]";if(address_book.length>0){a+=",\n";a+='	"address_book" : [\n';for(var b=0;b<address_book.length;++b){a+='	{"addr" : "'+address_book[b].addr+'",\n';a+='	 "label" : "'+address_book[b].label+'"}';if(b<address_book.length-1){a+=",\n"}}a+="\n	]"}a+="\n}";return a}function pasteAddress(a){$("#recipient-container").find('input[name="send-to-address"]').last().val(a)}function buildSendTxView(){if(address_book.length==0){return}if("send-coins"!=cVisible.attr("id")){return}var c=$("#address-book-tbl tbody");c.empty();for(var b=0;b<address_book.length;++b){c.append("<tr><td>"+address_book[b].label+'</td><td><div class="addr-book-entry">'+address_book[b].addr+'</div></td><td><img src="'+resource+'paste.png" onclick="pasteAddress(\''+address_book[b].addr+"')\"></tr>")}var a=$("#send-tx-form select");a.empty();for(var b=0;b<addresses.length;++b){var e=addresses[b];if(address_tags[e]==2){continue}var d=balances[e];if(d>0){a.prepend("<option>"+e+" - "+d/satoshi+" BTC</option>")}else{a.append("<option>"+e+"</option>")}}$("#change-addr").prepend("<option>New Address</option>");a.prepend("<option>Any Address</option>");a.val($("#target option:first").val())}function importPyWalletJSONObject(d){var b=0;try{for(b=0;b<d.keys.length;++b){if(walletIsFull()){return}var a=new Bitcoin.ECKey(Crypto.util.hexToBytes(d.keys[b].hexsec));if(d.keys[b].addr==a.getBitcoinAddress().toString()){internalAddOrReplaceKey(d.keys[b].addr,Bitcoin.Base58.encode(d.keys[b].priv))}else{makeNotice("error","misc-error","Private key doesn't seem to match the address. Possible corruption",1000);return false}}}catch(c){makeNotice("error","misc-error","Exception caught parsing importing JSON. Incorrect format?",5000);return false}makeNotice("success","misc-success","Imported "+b+" private keys",5000)}function importJSON(){var c=$("#import-json").val();if(c==null||c.length==0){makeNotice("error","misc-error","No import data provided!");return false}var f;try{try{f=jQuery.parseJSON(c);if(f==null){throw"null json"}}catch(d){var a=Crypto.AES.decrypt(c,password);f=jQuery.parseJSON(a);if(f==null){throw"null json"}}}catch(d){makeNotice("error","misc-error","Could not decode import data",5000);return}if(f==null||f.keys==null||f.keys.length==0){makeNotice("error","misc-error","No keys imported. Incorrect format?",5000);return false}try{if(f.keys[0].hexsec!=null){importPyWalletJSONObject(f)}else{for(var b=0;b<f.keys.length;++b){internalAddOrReplaceKey(f.keys[b].addr,f.keys[b].priv)}if(f.address_book!=null){for(var b=0;b<f.address_book.length;++b){internalAddAddressBookEntry(f.address_book[b].addr,f.address_book[b].label)}}}}catch(d){makeNotice("error","misc-error","Exception caught parsing JSON "+d,5000);return}$("#import-json").val("");return true}function getMyHash160s(){var b=[];for(var a=0;a<addresses.length;++a){if(address_tags[addresses[a]]==2){continue}b.push(Crypto.util.bytesToHex(new Bitcoin.Address(addresses[a]).hash))}return b}function updateLatestBlockAge(){if(latest_block!=null){var a=new Date().getTime()-new Date(latest_block.time*1000).getTime();$("#latest-block-age").html(Math.round(a/1000/60))}}function setLatestBlock(b){$("#latest-block").show();$("#latest-block-height").html(b.height);var a=new Date(b.time*1000);$("#latest-block-time").html(dateToString(a));$("#nodes-connected").html(nconnected);$("#market-price").html(market_price);latest_block=b;updateLatestBlockAge();buildTransactionsView()}function parseLatestBlockJSON(b){var c=jQuery.parseJSON(b);if(c==null){return}if(c.past_blocks!=null){for(var a=0;a<c.past_blocks.length;++a){block_heights[c.past_blocks[a].blockIndex]=c.past_blocks[a].height}}setLatestBlock(BlockFromJSON(c))}function queryAPILatestBlock(){if(offline){return}setLoadingText("Getting Latest Block");$.ajax({type:"GET",url:root+"latestblock",converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":jQuery.parseXML},success:function(a){parseLatestBlockJSON(a);try{localStorage.setItem("latestblock",a)}catch(b){console.log(b)}},error:function(a){makeNotice("error","misc-error","Error getting chain head.")},})}function buildTransactionsView(){$("#transactions-summary").show();if(final_balance<=0){$("#balance-btc").html("0");$("#balance-usd").html("0")}else{$("#balance-btc").html(toFixed(final_balance/satoshi,4));$("#balance-usd").html(toFixed(final_balance/satoshi*market_price,2))}if("my-transactions"!=cVisible.attr("id")){return}$("#summary-n-tx").html(n_tx);$("#summary-received-usd").html(toFixed(total_received/satoshi*market_price,2));$("#summary-received-btc").html(toFixed(total_received/satoshi,4));$("#summary-sent-usd").html(toFixed(total_sent/satoshi*market_price,2));$("#summary-sent-btc").html(toFixed(total_sent/satoshi,4));$("#summary-balance-usd").html(toFixed(final_balance/satoshi*market_price,2));$("#summary-balance-btc").html(toFixed(final_balance/satoshi,4));var a=null;var c=0;if(a!=null){clearInterval(a);a=null}$("#transactions").empty();var b=function(){var g="";for(var f=c;f<transactions.length&&f<(c+5);++f){var e=transactions[f];if(e.blockIndex==null||e.blockIndex==0){e.setConfirmations(0)}else{var d=block_heights[e.blockIndex];if(d!=null){var h=latest_block.height-d+1;e.setConfirmations(h)}}g+=e.getHTML(address_tags)}$("#transactions").append(g);c+=5;if(c<transactions.length){a=setTimeout(b,1)}};b()}function parseMultiAddressJSON(c){var d=jQuery.parseJSON(c);total_received=0;total_sent=0;final_balance=0;n_tx=0;transactions=[];for(var b=0;b<d.addresses.length;++b){final_balance+=d.addresses[b].final_balance;total_sent+=d.addresses[b].total_sent;total_received+=d.addresses[b].total_received;n_tx+=d.addresses[b].n_tx;balances[d.addresses[b].address]=d.addresses[b].final_balance}for(var b=0;b<d.txs.length;++b){var a=TransactionFromJSON(d.txs[b]);transactions.push(a)}}function queryAPIMultiAddress(){if(offline){return}var a=getMyHash160s();setLoadingText("Loading transactions");$.ajax({type:"POST",url:root+"multiaddr",data:{"address[]":a},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":jQuery.parseXML},success:function(b){parseMultiAddressJSON(b);buildReceiveCoinsView();buildTransactionsView();try{localStorage.setItem("multiaddr",b)}catch(c){console.log(c)}},error:function(b){console.log(b);makeNotice("error","misc-error","Error getting wallet balance from server",5000)},})}function didDecryptWallet(){try{var b=decodeURI(window.location.hash.replace("#",""));if(b!=null&&b.length>0){var h=false;var d=b.split("|");for(var c=0;c<d.length;c+=2){var l=d[c];var j=d[c+1];if(l=="newaddr"){var k=new Bitcoin.Address(j);if(k!=null&&k.toString()==j){if(walletIsFull()){return}if(internalAddOrReplaceKey(j,null)){h=true;makeNotice("success","added-addr","Added Bitcoin Address "+j,5000)}else{makeNotice("error","error-addr","Error Adding Bitcoin Address "+j,5000)}}}}window.location.hash="";if(h){backupWallet("update")}}}catch(f){makeNotice("error","add-address-error","Error adding new address from page link",5000)}try{var g=localStorage.getItem("guid");if(g!=guid){localStorage.clear()}var a=localStorage.getItem("multiaddr");if(a!=null){parseMultiAddressJSON(a);buildTransactionsView()}var m=localStorage.getItem("latestblock");if(m!=null){parseLatestBlockJSON(m)}localStorage.setItem("guid",guid)}catch(f){}queryAPIMultiAddress();queryAPILatestBlock();changeView($("#home-intro"));makeNotice("success","misc-success","Sucessfully Decrypted Wallet",5000)}function internalRestoreWallet(){try{var a=Crypto.AES.decrypt(encrypted_wallet_data,password);if(a.length==0){makeNotice("error","misc-error","Error Decrypting Wallet",5000);return false}var d=jQuery.parseJSON(a);for(var b=0;b<d.keys.length;++b){var f=d.keys[b].addr;internalAddKey(f,d.keys[b].priv);if(d.keys[b].tag!=null){address_tags[f]=d.keys[b].tag}else{address_tags[f]=0}}if(d.address_book!=null){for(var b=0;b<d.address_book.length;++b){internalAddAddressBookEntry(d.address_book[b].addr,d.address_book[b].label)}}sharedKey=d.sharedKey;setIsIntialized();return true}catch(c){console.log(c);makeNotice("error","misc-error","Error decrypting wallet. Please check you entered your password correctly.",5000)}return false}function getReadyForOffline(){var b=$("#offline-mode-modal");b.modal({keyboard:true,backdrop:"static",show:true});b.center();b.find(".btn.primary").attr("disabled",true);b.find(".btn.secondary").unbind().click(function(){b.modal("hide")});b.find(".notices").append($("#notices"));b.bind("hidden",function(){$("#main-notices-container").append($("#notices"));$("#restore-wallet-continue").removeAttr("disabled")});b.find(".ready").hide();b.find(".loading-indicator").show();new Image().src=resource+"qrcode.png";new Image().src=resource+"paste.png";new Image().src=resource+"delete.png";new Image().src=resource+"arrow_right_green.png";new Image().src=resource+"arrow_right_red.png";var c=false;setLoadingText("Loading QR Code generator");loadScript(resource+"wallet/jquery.qrcode.min.js",function(){loadScript(resource+"wallet/llqrcode.js",function(){loadScript(resource+"wallet/qr.code.reader.js",function(){initQRFlash("qr-code-reader",resource+"wallet/");loadScript(resource+"wallet/swfobject.js",function(){loadScript(resource+"wallet/downloadify.min.js",function(){initDownloadify();c=true})})})})});queryAPIMultiAddress();queryAPILatestBlock();$.post(root+"unspent",{"address[]":getMyHash160s()},function(d){unspent_cache=d}).error(function(d){makeNotice("error","misc-error","Error getting unspent outputs. Maybe you disconnected your internet too early?");b.modal("hide")});var a=function(){if(!c||$.active){setTimeout(a,200);return}b.find(".ready").show();b.find(".btn.primary").removeAttr("disabled");b.find(".btn.primary").unbind().click(function(){$.get(root+"ping").success(function(d){setLoadingText("Checking connectivity");makeNotice("error","misc-error","You must disconnect your internet before continuing",5000);return false}).error(function(d){$(".loading-indicator").remove();$("#status-container").html("OFFLINE MODE");offline=true;$("#email-backup-btn").attr("disabled",true);$("#my-account-btn").attr("disabled",true);b.modal("hide");didDecryptWallet()})})};setTimeout(a,1000)}function restoreWallet(){guid=$("#restore-guid").val();if(guid==null||guid.length!=36){makeNotice("error","misc-error","Invalid wallet identifier",5000);return false}else{hideNotice("guid-error")}password=$("#restore-password").val();if(password.length==0||password.length<8||password.length>255){makeNotice("error","misc-error","Password length must at least 10 characters",5000);return false}else{hideNotice("password-error")}var a=$("#restore-offline").is(":checked");if(a){try{if(localStorage==null){makeNotice("error","misc-error","Your browser does not support local stoage. Cannot login in offline mode.",5000);return false}else{if(localStorage.getItem("latestblock")!=null){makeNotice("error","misc-error","Local storage not empty. Have you enabled private browsing?.",5000);return false}}}catch(c){console.log(c)}}if(encrypted_wallet_data==null){setLoadingText("Validating authentication key");var b=$("#restore-auth-key").val();if(b==null||b.length==0||b.length>255){makeNotice("error","misc-error","You must enter a Yubikey or Email confirmation code",5000);return false}$.post("/wallet",{guid:guid,payload:b,length:b.length,method:"get-wallet"},function(d){encrypted_wallet_data=d;if(internalRestoreWallet()){if(a){getReadyForOffline()}else{didDecryptWallet()}}else{if(a){$("#offline-mode-modal").modal("hide")}$("#restore-wallet-continue").removeAttr("disabled")}}).error(function(d){$("#restore-wallet-continue").removeAttr("disabled");makeNotice("error","misc-error",d.responseText,5000)})}else{if(internalRestoreWallet()){if(a){getReadyForOffline()}else{didDecryptWallet()}}else{if(a){$("#offline-mode-modal").modal("hide")}$("#restore-wallet-continue").removeAttr("disabled")}}return true}function setIsIntialized(){websocketConnect();$("#tech-faq").hide();$("#intro-text").hide();$("#large-summary").show();$("#status-container").show();isInitialized=true}function validateEmail(c){var b=c.lastIndexOf("@");var a=c.lastIndexOf(".");return(b<a&&b>0&&c.indexOf("@@")==-1&&a>2&&(c.length-a)>2)}function getAccountInfo(){if(offline){return}setLoadingText("Getting Wallet Info");$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"get-info"},function(a){if(a.email!=null){$("#wallet-email").val(a.email);$(".my-email").text(a.email)}if(a.phrase!=null){$("#wallet-phrase").val(a.phrase)}if(a.alias!=null){$("#wallet-alias").val(a.alias);$(".alias").text(a.alias);$(".alias").show(200)}if(a.yubikey!=null){$("#wallet-yubikey").val(a.yubikey)}}).error(function(a){makeNotice("error","misc-error",a.responseText)})}function emailBackup(){if(offline){return}setLoadingText("Sending email backup");$.post("/wallet",{guid:guid,sharedKey:sharedKey,method:"email-backup"},function(a){makeNotice("success","backup-success",a,5000)}).error(function(a){makeNotice("error","misc-error",a.responseText)})}function updateAuthType(a){if(offline){return}var b=parseInt(a);if(b<0||b>4){makeNotice("error","misc-error","Invalid auth type");return}setLoadingText("Updating Two Factor Authentication");$.post("/wallet",{guid:guid,payload:b,sharedKey:sharedKey,length:b.length,method:"update-auth-type"},function(c){makeNotice("success","auth-type-success",c,5000)}).error(function(c){makeNotice("error","misc-error",c.responseText)})}function updateYubikey(a){if(offline){return}if(a==null||a.length==0){makeNotice("error","misc-error","You must enter Yubikey");return}setLoadingText("Updating Yubikey");$.post("/wallet",{guid:guid,payload:a,sharedKey:sharedKey,length:a.length,method:"update-yubikey"},function(b){makeNotice("success","yubikey-success",b,5000)}).error(function(b){makeNotice("error","misc-error",b.responseText)})}function updateAlias(a){if(offline){return}if(a==null||a.length==0){makeNotice("error","misc-error","You must enter an alias");return}setLoadingText("Updating Alias");$.post("/wallet",{guid:guid,payload:a,sharedKey:sharedKey,length:a.length,method:"update-alias"},function(b){makeNotice("success","alias-success",b,5000)}).error(function(b){makeNotice("error","misc-error",b.responseText)})}function updatePhrase(a){if(offline){return}if(a==null||a.length==0||a.length>255){makeNotice("error","misc-error","You must enter a secret phrase",5000);return}setLoadingText("Updating Secret Phrase");$.post("/wallet",{guid:guid,payload:a,sharedKey:sharedKey,length:a.length,method:"update-phrase"},function(b){makeNotice("success","phrase-success",b,5000)}).error(function(b){makeNotice("error","misc-error",b.responseText,5000)})}function updateEmail(a){if(offline){return}if(a==null||a.length==0){makeNotice("error","misc-error","You must enter an email",5000);return}if(!validateEmail(a)){makeNotice("error","misc-error","Email address is not valid",5000);return}setLoadingText("Updating Email");$.post("/wallet",{guid:guid,payload:a,sharedKey:sharedKey,length:a.length,method:"update-email"},function(b){makeNotice("success","email-success",b,5000)}).error(function(b){makeNotice("error","misc-error",b.responseText,5000)})}function backupWallet(a,c,j){if(offline){return}if(!isInitialized&&a!="insert"){return false}if(guid.length!=36){throw"Invalid wallet identifier"}var e=makeWalletJSON();for(var f=0;f<addresses.lenght;++f){var k=private_keys[addresses[f]];if(k!=null){var b=new Bitcoin.ECKey(Bitcoin.Base58.decode(k)).getBitcoinAddress().toString();if(b!=addresses[f]){throw"Private key does not match bitcoin address "+addresses[f]}}}var d=jQuery.parseJSON(e);if(d==null){throw"null json error"}var h=Crypto.AES.encrypt(e,password);if(h.length==0){throw"Error enrypting the JSON output"}var g=Crypto.util.bytesToHex(Crypto.SHA256(h,{asBytes:true}));setLoadingText("Saving wallet");$.ajax({type:"POST",url:root+"wallet",data:{guid:guid,length:h.length,payload:h,sharedKey:sharedKey,checksum:g,method:a},converters:{"* text":window.String,"text html":true,"text json":window.String,"text xml":window.String},success:function(l){var m=false;for(var i in address_tags){if(address_tags[i]==1){address_tags[i]=0;m=true}if(m){buildReceiveCoinsView()}}makeNotice("success","misc-success",l,5000);if(c!=null){c()}},error:function(i){makeNotice("error","misc-error",i.responseText,10000);if(j!=null){j()}}})}function checkAndSetPassword(){if(offline){return}var a=$("#password").val();var b=$("#password2").val();if(a!=b){makeNotice("error","misc-error","Passwords do not match.",5000);return false}if(a.length==0||a.length<10||a.length>255){makeNotice("error","misc-error","Password must be 10 characters or more in length",5000);return false}password=a;return true}function updatePassword(){if(offline){return}var a=$("#update-password-modal");a.modal({keyboard:true,backdrop:"static",show:true});a.center();a.find(".btn.primary").unbind().click(function(){a.modal("hide");var c=password;if(!checkAndSetPassword()){return false}try{backupWallet("update",function(){window.location=root+"wallet/"+guid+window.location.hash},function(){makeNotice("error","misc-error","Error syncing wallet. Password Not changed",5000);password=c})}catch(b){makeNotice("error","misc-error","Error syncing wallet. Password Not changed",5000);password=c}});a.find(".btn.secondary").unbind().click(function(){a.modal("hide")})}function generateNewWallet(){if(addresses.length>0){makeNotice("error","misc-error","You have already generated one or more keys.");return false}if(guid!=null){makeNotice("error","misc-error","You have already have a vaild wallet identifier.");return false}if(isInitialized){return false}if(!checkAndSetPassword()){return false}try{for(var a=0;a<5;++a){generateNewAddressAndKey()}sharedKey=guidGenerator();guid=guidGenerator();if(guid.length!=36){makeNotice("error","misc-error","Error generating wallet identifier");return false}backupWallet("insert");return true}catch(b){makeNotice("error","misc-error","Error generating wallet. Your browser maybe incompatible")}return false}function changeView(a){if(a===cVisible){return}if(cVisible!=null){if($("#"+cVisible.attr("id")+"-btn").length>0){$("#"+cVisible.attr("id")+"-btn").parent().attr("class","")}cVisible.hide(200)}cVisible=a;cVisible.show(200);if($("#"+cVisible.attr("id")+"-btn").length>0){$("#"+cVisible.attr("id")+"-btn").parent().attr("class","active")}}function pushTx(a){if(offline){return}var b=a.serialize();var c=Crypto.util.bytesToHex(b);setLoadingText("Sending Transaction");$.post("/pushtx",{tx:c},function(d){}).success(function(d){makeNotice("success","misc-success",d,5000)}).error(function(d){makeNotice("error","misc-error",d.responseText)});return true}function makeTransaction(n,m,s,k,p,o,a,q){var h=BigInteger.ZERO;for(var v=0;v<n.length;++v){h=h.add(n[v].value)}var z=new Bitcoin.Address(our_address);var t=h.divide(BigInteger.valueOf(100)).multiply(BigInteger.valueOf(1));var y=BigInteger.valueOf(1000000);if(t.compareTo(y)<0){t=y}var d=BigInteger.ZERO;var A=BigInteger.ZERO;var r=null;if(a!=null){r=a.toString()}var b=null;if(m!=null){b=m.toString()}if(r==null){h=h.add(t)}if(s!=null){h=h.add(s)}for(var v=0;v<k.length;++v){try{var l=new Bitcoin.Address(k[v].script.simpleOutPubKeyHash()).toString();if(l==null){throw"Unable to decode out put address from transactino hash "+u.tx_hash}else{if(!offline&&private_keys[l]==null){throw"Unable use bitcoin address "+l+" in online mode"}}var u=k[v];if(r!=null&&l==r){if(A.compareTo(t)<0){A=A.add(u.value)}else{continue}}else{if(b!=null&&l!=b){continue}else{d=d.add(u.value)}}var j=Crypto.util.hexToBytes(u.tx_hash);var g=Crypto.util.bytesToBase64(Crypto.util.hexToBytes(u.tx_hash));p.push(new Bitcoin.TransactionIn({outpoint:{hash:g,hexhash:j,index:u.tx_output_n,value:u.value},script:u.script,sequence:4294967295}));if(d.compareTo(h)>=0&&(a==null||A.compareTo(t)>=0)){break}}catch(x){makeNotice("info","tx-error",x,5000)}}if(d.compareTo(h)<0){throw"Insufficient funds. Value Needed "+Bitcoin.Util.formatValue(h.toString())+" BTC. Available amount "+Bitcoin.Util.formatValue(d.toString())+" BTC"}var w=null;if(r==null){w=d.subtract(h)}else{w=d.add(A).subtract(h).subtract(t)}var f=new Bitcoin.Transaction();for(var v=0;v<p.length;v++){f.addInput(p[v])}for(var v=0;v<n.length;++v){f.addOutput(n[v].address,n[v].value)}f.addOutput(z,t);if(w>0){if(o!=null){f.addOutput(o,w)}else{if(m!=null){f.addOutput(m,w)}else{var c=q[Math.floor(Math.random()*q.length)];f.addOutput(new Bitcoin.Address(Crypto.util.hexToBytes(c)),w)}}}return f}function signInput(b,n,g,j){var f=1;var h=b.hashTransactionForSignature(g[j].script,j,f);var a=g[j].script.simpleOutPubKeyHash();var c=new Bitcoin.Address(a).toString();var m=null;if(private_keys[c]!=null){m=new Bitcoin.ECKey(Bitcoin.Base58.decode(private_keys[c]))}if(m==null){for(var e=0;e<n.length;++e){if(n[e].addr==c){m=n[e].priv;break}}}if(m==null){n.push({addr:c,priv:null});return false}if(m.getBitcoinAddress()!=c){throw"Private key does not match bitcoin address"}var d=m.sign(h);if(d==null){throw"Error signing transaction hash"}var k=m.getPub();if(k==null){throw"Private key pub key is null"}d.push(parseInt(f));var l=Bitcoin.Script.createInputScript(d,k);if(l==null){throw"Error creating input script"}b.ins[j].script=l;return true}function parseScript(a){var b=new Bitcoin.Script();var d=a.split(" ");for(var c=0;c<d.length;++c){if(Bitcoin.Opcode.map.hasOwnProperty(d[c])){b.writeOp(Bitcoin.Opcode.map[d[c]])}else{b.writeBytes(Crypto.util.hexToBytes(d[c]))}}return b}function internalDeletePrivateKey(b){if(private_keys[b]!=null){var a=new Bitcoin.ECKey(Bitcoin.Base58.decode(private_keys[b])).getBitcoinAddress().toString();if(a!=b){makeNotice("error","misc-error","Private key does not match address in same index. Possible curruption.",5000);return}}private_keys[b]=null}function internalDeleteAddress(c){for(var b=0;b<addresses.length;++b){if(addresses[b]==c){if(private_keys[c]!=null){var a=new Bitcoin.ECKey(Bitcoin.Base58.decode(private_keys[c])).getBitcoinAddress().toString();if(a!=c){makeNotice("error","misc-error","Private key does not match address in same index. Possible curruption.",5000);return}}addresses.splice(b,1);private_keys[c]=null;address_tags[c]=null;break}}}function internalAddAddressBookEntry(c,a){if(address_book.length>=200){makeNotice("error","misc-error","We currently support a maximum of 200 address book entries, please remove some unsused ones.",5000);return}for(var b=0;b<address_book.length;++b){if(c==address_book[b].addr){return}}address_book.push({addr:c,label:a})}function findAddressIndex(b){for(var a=0;a<addresses.length;++a){if(b==addresses[a]){return a}}return -1}function walletIsFull(a){if(addresses.length>=200){makeNotice("error","misc-error","We currently support a maximum of 200 private keys, please remove some unsused ones.",5000);return true}return false}function internalAddKey(b,a){addresses.push(b);private_keys[b]=a}function internalAddOrReplaceKey(d,a){for(var c=0;c<addresses.length;++c){if(d==addresses[c]){if(a!=null){var b=new Bitcoin.ECKey(Bitcoin.Base58.decode(a)).getBitcoinAddress().toString();if(b!=d){makeNotice("error","misc-error","Private key does not match address in same index. Possible curruption.",5000);return false}private_keys[d]=a;return true}return false}}internalAddKey(d,a);return true}function addAddressBookEntry(){var a=$("#add-address-book-entry-modal");a.modal({keyboard:true,backdrop:"static",show:true});a.center();a.find(".btn.primary").unbind().click(function(){var f=$("#add-address-book-entry-modal");f.modal("hide");var c=f.find('input[name="label"]').val();var b=f.find('input[name="address"]').val();if(c.length==0){makeNotice("error","misc-error","you must enter a label for the address book entry",5000);return false}if(b.length==0){makeNotice("error","misc-error","you must enter a bitcoin address for the address book entry",5000);return false}var h;try{h=new Bitcoin.Address(b);if(h==null){throw"Null address"}}catch(g){makeNotice("error","misc-error","Bitcoin address invalid, please make sure you entered it correctly",5000);return false}for(var d=0;d<address_book.length;++d){if(address_book[d].addr==b){makeNotice("error","misc-error","Bitcoin address already exists",5000);return false}}makeNotice("success","misc-success","Added Address book entry",5000);internalAddAddressBookEntry(b,c);backupWallet("update");buildSendTxView()});a.find(".btn.secondary").unbind().click(function(){a.modal("hide")})}function deleteAddress(f){var c=$("#delete-address-modal");c.modal({keyboard:true,backdrop:"static",show:true});c.center();c.find(".btn.primary").show();c.find(".btn.danger").show();c.find(".modal-body").show();$("#change-mind").hide();c.find("#to-delete-address").html(f);var d=balances[f];if(d!=null&&d>0){d=d/satoshi+" BTC"}else{d="0 BTC"}c.find("#delete-balance").text("Balance "+d);var e=false;var b=0;var a=null;changeMind=function(){$("#change-mind").show();$("#change-mind-time").text(5-b)};c.find(".btn.primary").unbind().click(function(){changeMind();c.find(".btn.primary").hide();c.find(".btn.danger").hide();a=setInterval(function(){if(e){return}if(sound_on){try{document.getElementById("beep").play(1)}catch(g){sound_on=false}}++b;changeMind();if(b==5){$("#delete-address-modal").modal("hide");makeNotice("warning","warning-deleted","Private Key Removed From Wallet",5000);internalDeletePrivateKey(f);buildReceiveCoinsView();backupWallet("update");clearInterval(a)}},1000)});c.find(".btn.danger").unbind().click(function(){changeMind();c.find(".btn.primary").hide();c.find(".btn.danger").hide();a=setInterval(function(){if(e){return}if(sound_on){try{document.getElementById("beep").play(1)}catch(g){sound_on=false}}++b;changeMind();if(b==5){try{$("#delete-address-modal").modal("hide");makeNotice("warning","warning-deleted","Address & Private Key Removed From Wallet",5000);internalDeleteAddress(f);buildReceiveCoinsView();backupWallet("update");queryAPIMultiAddress()}finally{clearInterval(a)}}},1000)});c.bind("hidden",function(){if(a){e=true;clearInterval(a);a=null}});c.find(".btn.secondary").unbind().click(function(){c.modal("hide")})}function setReviewTransactionContent(o,q){$("#rtc-hash").html(Crypto.util.bytesToHex(q.getHash()));$("#rtc-version").html(q.version);$("#rtc-from").html("");$("#rtc-to").html("");var r=BigInteger.ZERO;var p=BigInteger.ZERO;var k=BigInteger.ZERO;var f="send ";var n=true;var c=BigInteger.ZERO;for(var l=0;l<q.ins.length;++l){var g=q.ins[l];var e=new Bitcoin.Address(g.script.simpleInPubKeyHash());p=p.add(g.outpoint.value);k=k.add(g.outpoint.value);$("#rtc-from").append(e+' <font color="green">'+Bitcoin.Util.formatValue(g.outpoint.value)+" BTC <br />")}for(var l=0;l<q.outs.length;++l){var m=q.outs[l];var d=m.value.slice();d.reverse();var s=new BigInteger(d);var a=m.script.simpleOutPubKeyHash();var b=new Bitcoin.Address(a).toString();$("#rtc-to").append(b+' <font color="green">'+Bitcoin.Util.formatValue(s.intValue())+" BTC </font><br />");r=r.add(s);p=p.subtract(s);var j=false;for(var h=0;h<addresses.length;++h){if(b==addresses[h]){j=true;break}}if(!j){if(b!=our_address){if(f.length>0){f+=" and "}f+="<b>"+Bitcoin.Util.formatValue(s.intValue())+" BTC</b> to bitcoin address "+b;n=false}}else{k=k.subtract(s);if(b!=our_address){c=c.add(s)}}}if(p.compareTo(BigInteger.valueOf(1).multiply(BigInteger.valueOf(satoshi)))>=0){alert("Warning fees are very high for this transaction. Please double check each output!")}if(n==true){f="move <b>"+Bitcoin.Util.formatValue(c)+" BTC</b> between your own bitcoin addresses"}$("#rtc-basic-summary").html(f);$("#rtc-effect").html("-"+Bitcoin.Util.formatValue(k)+" BTC");$("#rtc-fees").html(Bitcoin.Util.formatValue(p)+" BTC");$("#rtc-value").html(Bitcoin.Util.formatValue(r)+" BTC");o.center()}function txFullySigned(a){var c=$("#new-transaction-modal");try{c.find(".modal-header h3").html("Transaction ready to be sent.");c.find("#missing-private-key").hide();c.find("#review-tx").show();setReviewTransactionContent(c,a);var b=c.find(".btn.primary");setLoadingText("Checking Connectivity");if(!offline){b.attr("disabled",false);b.text("Send Transaction");b.unbind().click(function(){b.attr("disabled",true);pushTx(a);c.modal("hide")})}else{c.find(".modal-header h3").html("Created Offline Transaction.");b.attr("disabled",false);b.text("Show Offline Instructions");b.unbind().click(function(){b.attr("disabled",true);c.find("#missing-private-key").hide();c.find("#review-tx").hide();c.find("#offline-transaction").show();var e=a.serialize();var f=Crypto.util.bytesToHex(e);c.find('#offline-transaction textarea[name="data"]').val(f)})}}catch(d){makeNotice("error","misc-error",d,5000);c.modal("hide");return}}function createSendGotUnspent(p,b,c,j,m,l,n,i){var o=$("#new-transaction-modal");var f=[];var d=makeTransaction(p,b,c,j,f,l,n,i);try{var a=$("#tx-sign-progress").show(200);if(d==null){makeNotice("error","misc-error","Error Creating Transaction",5000);o.modal("hide");return}var h=0;var g=0;a.find(".t").text(d.ins.length);signOne=function(){setTimeout(function(){if(!o.is(":visible")){return}a.find(".n").text(g+1);if(signInput(d,m,f,g)){++g;if(g==d.ins.length){a.hide();txFullySigned(d)}else{signOne()}}else{if(offline&&m.length>0){a.hide();var r=null;for(var q=0;q<m.length;++q){if(m[q].priv==null){r=m[q];break}}if(r==null){makeNotice("error","misc-error","Unknown error signing transaction",5000);o.modal("hide");return}var s=$("#missing-private-key");s.find('input[name="key"]').val("");s.show();o.find(".modal-header h3").html("Private Key Needed.");s.find(".address").html(r.addr);try{loadScript(resource+"wallet/qr.code.reader.js",function(){loadScript(resource+"wallet/llqrcode.js",function(){var e=initQRCodeReader("qr-code-reader",function(v){try{var u=privateKeyStringToKey(v,"base58");if(u==null){makeNotice("error","misc-error","Error decoding private key",5000);return}if(r.addr!=u.getBitcoinAddress()){makeNotice("error","misc-error","The private key you entered does not match the bitcoin address",5000);return}clearInterval(e);$("#qr-code-reader").remove();r.priv=u;s.hide();a.show();signOne()}catch(w){makeNotice("error","misc-error","Error decoding private key "+w,5000);return}},resource+"wallet/");o.center();o.bind("hidden",function(){clearInterval(e)})})})}catch(t){console.log(t)}s.find('button[name="add"]').unbind().click(function(){if(!isInitialized){return}var v=s.find('input[name="key"]').val();var x=s.find('select[name="format"]').val();if(v.length==0){makeNotice("error","misc-error","You must enter a private key to import",5000);return}try{var u=privateKeyStringToKey(v,x);if(u==null){makeNotice("error","misc-error","Error decoding private key",5000);return}if(r.addr!=u.getBitcoinAddress()){makeNotice("error","misc-error","The private key you entered does not match the bitcoin address",5000);return}r.priv=u;s.hide();a.show();signOne()}catch(w){makeNotice("error","misc-error","Error importing private key "+w,5000);return}})}else{makeNotice("error","misc-error","Unknown error signing transaction");o.modal("hide");return}}},1)};signOne()}catch(k){makeNotice("error","misc-error",k,5000);o.modal("hide");return}}function newTxValidateFormAndGetUnspent(){var j=null;var a=null;var h=null;var i=null;var l=false;try{var k=[];$("#recipient-container").children().each(function(){var r=$(this);var m=r.find('input[name="send-to-address"]');var q=r.find('input[name="send-value"]');var n=0;var p;try{n=Bitcoin.Util.parseValue(q.val());if(n==null||n.compareTo(BigInteger.ZERO)<=0){throw"You must enter a value greater than zero"}}catch(o){throw"Invalid send amount"}if(m.val().length==0){throw"You must enter a bitcoin address for each recipient"}try{p=new Bitcoin.Address(m.val())}catch(o){throw"Invalid to address: "+o}k.push({address:p,value:n})});if(k.length==0){throw"A transaction must have at least one recipient"}if($("#send-from-address").val()!="Any Address"){var f=$("#send-from-address").val().split(" ",1);try{a=new Bitcoin.Address(f[0])}catch(g){makeNotice("error","from-error","Invalid from address: "+g,5000);return false}}if(show_adv){var d=$("#fee-addr").val();if(d!="Any Address"){var f=d.split(" ",1);try{i=new Bitcoin.Address(f[0])}catch(g){makeNotice("error","fee-error","Invalid fee address: "+g,5000);return false}}if(i!=null&&a.toString()==i.toString()){makeNotice("error","misc-error","From address and Fee address cannot be the same",5000);return false}var c=$("#change-addr").val();if(c=="New Address"){l=true}else{if(c!="Any Address"){var f=c.split(" ",1);try{h=new Bitcoin.Address(f[0])}catch(g){makeNotice("error","change-error","Invalid change address: "+g,5000);return false}}}}var b;try{b=Bitcoin.Util.parseValue($("#send-fees").val());if(b==null||b.compareTo(BigInteger.ZERO)<0){throw"Fees cannot be negative"}}catch(g){makeNotice("error","misc-error","Invalid fee value",5000);return false}fromAddresses=getMyHash160s();j=$("#new-transaction-modal");j.find("#offline-transaction").hide();j.find("#missing-private-key").hide();j.find("#review-tx").hide();j.find(".modal-header h3").html("Creating transaction");j.find("#tx-sign-progress").hide();j.modal({keyboard:true,backdrop:"static",show:true});j.center();j.find(".btn.primary").attr("disabled",true);j.find(".btn.primary").text("Send Transaction");j.find(".btn.secondary").unbind().click(function(){j.modal("hide")});j.find(".notices").append($("#notices"));j.bind("hidden",function(){$("#main-notices-container").append($("#notices"))});(function(){var m=function(t){try{var n=[];for(var q=0;q<t.unspent_outputs.length;++q){var o;try{o=parseScript(t.unspent_outputs[q].script)}catch(s){makeNotice("error","misc-error","Error decoding script: "+s);continue}var p={script:o,value:BigInteger.fromByteArrayUnsigned(Crypto.util.hexToBytes(t.unspent_outputs[q].value_hex)),tx_output_n:t.unspent_outputs[q].tx_output_n,tx_hash:t.unspent_outputs[q].tx_hash};n.push(p)}j.find(".modal-header h3").html("Signing Transaction");var r=[];createSendGotUnspent(k,a,b,n,r,h,i,fromAddresses)}catch(s){makeNotice("error","misc-error","Error creating transaction: "+s,5000);j.modal("hide");return false}};if(offline){m(unspent_cache)}else{if(l){var e=generateNewAddressAndKey();backupWallet("update",function(){h=e;buildSendTxView();setLoadingText("Getting Unspent Outputs");$.post(root+"unspent",{"address[]":fromAddresses},function(n){m(n)}).error(function(n){j.modal("hide");makeNotice("error","misc-error","Error getting unspent outputs. Please check your internet connection.")})},function(){makeNotice("error","misc-error","Error syncing wallet. Transaction cancelled");return})}else{setLoadingText("Getting Unspent Outputs");$.post(root+"unspent",{"address[]":fromAddresses},function(n){m(n)}).error(function(n){j.modal("hide");makeNotice("error","misc-error","Error getting unspent outputs. Please check your internet connection.")})}}})()}catch(g){if(j!=null){j.modal("hide")}throw g}return true}function initDownloadify(){Downloadify.create("download_unencrypted",{filename:function(){return"wallet.json"},data:function(){return $("#json-unencrypted-export").val()},onComplete:function(){makeNotice("success","misc-success","Wallet successfully downloaded",5000)},onCancel:function(){makeNotice("error","misc-error","Wallet download cancelled",2000)},onError:function(){makeNotice("error","misc-error","Error downloading wallet file",2000)},transparent:false,swf:resource+"wallet/downloadify.swf",downloadImage:resource+"downloadify_button.png",width:95,height:32,transparent:true,append:false});Downloadify.create("download_crypted",{filename:function(){return"wallet.json.aes"},data:function(){return $("#json-crypted-export").val()},onComplete:function(){makeNotice("success","misc-success","Wallet successfully downloaded",5000)},onCancel:function(){makeNotice("error","misc-error","Wallet download cancelled",2000)},onError:function(){makeNotice("error","misc-error","Error downloading wallet file",2000)},transparent:false,swf:resource+"wallet/downloadify.swf",downloadImage:resource+"downloadify_button.png",width:95,height:32,transparent:true,append:false});downloadify_initd=true}function populateImportExportView(){var c=$("#export-tabs .active").text();if(c=="Export Unencrypted"){var a=makeWalletJSON($("#export-priv-format").val());$("#json-unencrypted-export").val(a);if(!downloadify_initd){loadScript(resource+"wallet/downloadify.min.js",function(){loadScript(resource+"wallet/swfobject.js",function(){initDownloadify()})})}}else{if(c=="Export"){var a=makeWalletJSON();var b=Crypto.AES.encrypt(a,password);$("#json-crypted-export").val(b);if(!downloadify_initd){loadScript(resource+"wallet/downloadify.min.js",function(){loadScript(resource+"wallet/swfobject.js",function(){initDownloadify()})})}}else{if(c=="Paper Wallet"){$("#paper-wallet").empty();loadScript(resource+"wallet/jquery.qrcode.min.js",function(){var e=$("#paper-wallet");for(var h=0;h<addresses.length;++h){var k=addresses[h];var m=0;var j="Online Mode";if(m==1){j="Offline Mode"}else{if(m==0){if(private_keys[k]==null){continue}}}var d=$('<div style="float:left;clear:left;"></div>');var l=makeQRCode(250,250,1,private_keys[k]);e.append(d);d.append(l);var g=balances[k];if(g!=null&&g>0){g=g/satoshi+" BTC"}else{g="0 BTC"}var f=private_keys[k];if(f==null){f="No Private Key"}d=$('<div style="float:left;"><h3>'+k+"</h3><br /><small><p><b>"+f+"</b></p></small><br /><p>"+j+"</p><br /><p>Balance "+g+"</p> </div>");e.append(d);if((h+1)%3==0||h==addresses.length-1){e.append('<div style="width:100%;clear:both;page-break-after:always>&nbsp;</div>')}}})}}}}function privateKeyStringToKey(b,d){var a=null;if(d=="base58"){a=Bitcoin.Base58.decode(b)}else{if(d=="base64"){a=Crypto.util.base64ToBytes(b)}else{if(d=="hex"){a=Crypto.util.hexToBytes(b)}else{if(d=="mini"){a=parseMiniKey(b)}else{if(d=="sipa"){var c=Bitcoin.Base58.decode(b);c.shift();a=c.slice(0,c.length-4)}else{throw"Unsupported key format"}}}}}if(a.length!=32){throw"Result not 32 bytes in length"}return new Bitcoin.ECKey(a)}$(document).ready(function(){$("button").removeAttr("disabled");$(function(){$("a[rel=popover]").popover({offset:10}).click(function(c){c.preventDefault()})});$("body").ajaxStart(function(){$(".loading-indicator").fadeIn(200)});$("body").ajaxStop(function(){$(".loading-indicator").fadeOut(200)});$("#two-factor-select").change(function(){var c=parseInt($(this).val());updateAuthType(c);if(c==0){$("#two-factor-yubikey").hide();$("#two-factor-email").hide();$("#two-factor-none").show(200)}else{if(c==1||c==4){$("#two-factor-none").hide();$("#two-factor-email").hide();$("#two-factor-yubikey").show(200)}else{if(c==2){$("#two-factor-none").hide();$("#two-factor-yubikey").hide();$("#two-factor-email").show(200)}}}});$("#new-addr").click(function(){try{generateNewAddressAndKey();backupWallet("update")}catch(c){makeNotice("error","misc-error",c)}});$("#wallet-email").change(function(c){updateEmail($(this).val())});$("#wallet-yubikey").change(function(c){updateYubikey($(this).val())});$("#wallet-phrase").change(function(c){updatePhrase($(this).val())});$("#wallet-alias").change(function(c){$(this).val($(this).val().replace(/[\.,\/ #!$%\^&\*;:{}=`~()]/g,""));if($(this).val().length>0){$(".alias").fadeIn(200);$(".alias").text($(this).val())}updateAlias($(this).val())});$("#update-password-btn").unbind().click(function(){updatePassword()});$("#email-backup-btn").unbind().click(function(){emailBackup()});$("#wallet-login").unbind().click(function(){try{var c=localStorage.getItem("guid");if(c!=null){window.location=root+"wallet/"+c;return}}catch(d){console.log(d)}window.location=root+"wallet/login"});$("#restore-wallet-continue").click(function(){var c=$("#restore-guid").val();if(guid!=c&&c!=null){window.location=root+"wallet/"+c;return}$(this).attr("disabled",true);if(!restoreWallet()){$(this).attr("disabled",false)}});$("#import-export-btn").click(function(){if(!isInitialized){return}$("#import-json-btn").unbind().click(function(){if(!isInitialized){return}$(this).attr("disabled",true);if(importJSON()){changeView($("#receive-coins"));buildReceiveCoinsView();backupWallet("update");queryAPIMultiAddress();queryAPILatestBlock()}$(this).attr("disabled",false)});$("#import-address-btn").unbind().click(function(){var f=$.trim($("#import-address-address").val());if(f.length=0){makeNotice("error","misc-error","You must enter an address to import",5000);return}if(walletIsFull()){return}try{var d=new Bitcoin.Address(f);if(d.toString()!=f){makeNotice("error","misc-error","Inconsistency between addresses",5000);return}if(internalAddOrReplaceKey(f,null)){makeNotice("success","added-address","Sucessfully Added Address "+d,5000);buildReceiveCoinsView();backupWallet("update");queryAPIMultiAddress()}else{makeNotice("error","add-error","Error Adding Address "+d,5000)}}catch(g){makeNotice("error","misc-error","Error importing address: "+g,5000);return}});var c=$("#import-private-key");c.find('button[name="add"]').unbind().click(function(){if(!isInitialized){return}var f=c.find('input[name="key"]').val();var h=c.find('select[name="format"]').val();if(f.length==0){makeNotice("error","misc-error","You must enter a private key to import",5000);return}if(walletIsFull()){return}try{var d=privateKeyStringToKey(f,h);if(d==null){throw"Decode returned null key"}var i=d.getBitcoinAddress().toString();if(internalAddOrReplaceKey(i,Bitcoin.Base58.encode(d.priv))){buildReceiveCoinsView();backupWallet("update");queryAPIMultiAddress();makeNotice("success","added-adress","Added bitcoin address "+i,5000)}else{makeNotice("error","add-error","Unable to add private key for bitcoin address "+i,5000)}}catch(g){console.log(g);makeNotice("error","misc-error","Error importing private key: "+g,5000);return}});changeView($("#import-export"));populateImportExportView()});$("#add-address-book-entry-btn").click(function(){addAddressBookEntry()});$("#password").unbind().bind("change keypress keyup",function(){var f=document.getElementById("password-warnings");var c=document.getElementById("password-result");var e=$(this).val();var j=HSIMP.convertToNumber("250000000"),h,g,d;f.innerHTML="";if(e){h=HSIMP.time(e,j.numeric);h=HSIMP.timeInPeriods(h);$("#password-result").fadeIn(200);if(h.period==="seconds"){if(h.time<0.000001){c.innerHTML="Your password would be hacked <span>Instantly</span>"}else{if(h.time<1){c.innerHTML="It would take a desktop PC <span>"+h.time+" "+h.period+"</span> to hack your password"}else{c.innerHTML="It would take a desktop PC <span>About "+h.time+" "+h.period+"</span> to hack your password"}}}else{c.innerHTML="It would take a desktop PC <span>About "+h.time+" "+h.period+"</span> to hack your password"}d=HSIMP.check(e);HSIMP.formatChecks(d.results,f);if(d.insecure){c.innerHTML="";$("#password-result").fadeOut(200)}}else{c.innerHTML="";$("#password-result").fadeOut(200)}});$("#my-account-btn").click(function(){if(!isInitialized){return}getAccountInfo();changeView($("#my-account"))});$("#home-intro-btn").click(function(){if(!isInitialized){return}changeView($("#home-intro"))});$("#my-transactions-btn").click(function(){if(!isInitialized){return}changeView($("#my-transactions"));buildTransactionsView()});$("#send-coins-btn").click(function(){if(!isInitialized){return}changeView($("#send-coins"));buildSendTxView()});$("#send-form-reset-btn").click(function(){$('input[name="send-to-address"]').val("");$('input[name="send-value"]').val("");var c=$("#recipient-container div:first-child").clone();$("#recipient-container").empty();$("#recipient-container").append(c);$("#send-from-address").val($("#send-from-addres option:first").val());$("#send-fees").val("0")});$("#send-tx-btn").click(function(){if(!isInitialized){return}try{newTxValidateFormAndGetUnspent()}catch(c){makeNotice("error","misc-error",c,5000)}});$("#add-recipient").click(function(){if(!isInitialized){return}var c=$("#recipient-container div:first-child").clone();c.appendTo($("#recipient-container"));c.find('input[name="send-to-address"]').val("");c.find('input[name="send-value"]').val("")});$("#receive-coins-btn").click(function(){if(!isInitialized){return}changeView($("#receive-coins"));buildReceiveCoinsView()});$(".tabs").tabs();$("#export-priv-format").change(function(d){var c=makeWalletJSON($("#export-priv-format").val());$("#json-unencrypted-export").val(c)});$("#export-tabs").bind("change",function(c){populateImportExportView()});if(initial_error!=null){makeNotice("error","fatal_error",initial_error)}if(guid==null){cVisible=$("#getting-started")}else{if(guid.length==0){try{var a=localStorage.getItem("guid");if(guid!=a&&a!=null){window.location=root+"wallet/"+a;return}}catch(b){console.log(b)}}cVisible=$("#restore-wallet")}cVisible.show()});function parseMiniKey(b){var c=Crypto.SHA256(b+"?");switch(c.slice(0,2)){case"00":var d=Crypto.SHA256(b);return d;break;case"01":var a=Crypto.util.hexToBytes(c.slice(2,4))[0];var e=Math.round(Math.pow(2,(a/4)));var d=Crypto.PBKDF2(b,"Satoshi Nakamoto",32,{iterations:e});return d;break;default:console.log("invalid key");break}}function guidGenerator(){var a=function(){return(((1+Math.random())*65536)|0).toString(16).substring(1)};return(a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a())}function hideqrcode(b,a){$(".qrcode").remove();$(".popover").remove();$("#"+b).popover("hide")}function showQRCodeModal(c){var b=$("#qr-code-modal");b.modal({keyboard:true,backdrop:"static",show:true});b.center();var a=b.find(".modal-body");loadScript(resource+"wallet/jquery.qrcode.min.js",function(){var d=makeQRCode(300,300,1,c);a.find(".data").empty().append(d)});a.find(".code").text(c);b.find(".btn.secondary").unbind().click(function(){b.modal("hide")})}var archTimer;function unArchiveAddr(a){if(address_tags[a]==2){address_tags[a]=0;buildReceiveCoinsView();buildSendTxView();buildTransactionsView();if(archTimer!=null){clearInterval(archTimer);archTimer=null}archTimer=setTimeout(function(){backupWallet("update");queryAPIMultiAddress()},3000)}else{makeNotice("error","add-error","Cannot unarchive this address",5000)}}function archiveAddr(a){if(getMyHash160s().length<=1){makeNotice("error","add-error","You must leave at least one active address",5000);return}if(address_tags[a]==0){address_tags[a]=2;buildReceiveCoinsView();buildSendTxView();buildTransactionsView();if(archTimer!=null){clearInterval(archTimer);archTimer=null}archTimer=setTimeout(function(){backupWallet("update");queryAPIMultiAddress()},3000)}else{makeNotice("error","add-error","Cannot archive this address",5000)}}function buildReceiveCoinsView(){if("receive-coins"!=cVisible.attr("id")){return}var e;var d;for(var c=0;c<addresses.length;++c){var h=addresses[c];var a=address_tags[h];var b="";if(a==1){b=' <font color="red">(Not Synced)</font>'}else{if(private_keys[h]==null){b=' <font color="red">(No Private Key)</font>'}}var g=balances[h];if(g!=null&&g>0){g=g/satoshi+' <span class="can-hide">BTC</span>'}else{g='0 <span class="can-hide">BTC</span>'}var f='<tr><td style="width:20px;"><img id="qr'+h+'"  onclick="showQRCodeModal(\''+h+'\')" src="'+resource+'qrcode.png" /></td><td><div class="my-addr-entry">'+h+b+"<div></td><td>";if(a==2){f+='<img class="basic" src="'+resource+'unarchive.png" onclick="unArchiveAddr(\''+h+"')\" />"}else{if(a==0){f+='<span id="'+h+'" style="color:green">'+g+'</span></td><td><img class="basic" src="'+resource+'archive.png" onclick="archiveAddr(\''+h+"')\" />"}}f+=('<img class="adv" src="'+resource+'delete.png" onclick="deleteAddress(\''+h+"')\" /></td></tr>");if(a==2){d+=f}else{e+=f}}$("#my-addresses tbody").empty().append(e);$("#archived-addr tbody").empty().append(d)}function generateNewAddressAndKey(){if(walletIsFull()){return false}var a=new Bitcoin.ECKey(false);if(a==null){throw"Unable to generate a new bitcoin address."}var c=a.getBitcoinAddress();if(c==null){throw"Generated invalid bitcoin address."}if(internalAddOrReplaceKey(c,Bitcoin.Base58.encode(a.priv))){address_tags[c]=1;buildReceiveCoinsView();makeNotice("info","new-address","Generated new bitcoin address "+c,5000);try{ws.send('{"op":"addr_sub", "hash":"'+Crypto.util.bytesToHex(a.getPubKeyHash())+'"}')}catch(b){}}else{throw"Unable to add generated bitcoin address."}return c};